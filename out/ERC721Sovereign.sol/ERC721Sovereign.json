{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "digests",
          "type": "bytes32[]"
        }
      ],
      "name": "VoidVouchers",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getRoyalties",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "tokenURI",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ERC1271Account",
              "type": "address"
            },
            {
              "internalType": "uint16[]",
              "name": "royaltyBps",
              "type": "uint16[]"
            },
            {
              "internalType": "uint16[]",
              "name": "commissionBps",
              "type": "uint16[]"
            },
            {
              "internalType": "address[]",
              "name": "royaltyRecipients",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "commissionRecipients",
              "type": "address[]"
            }
          ],
          "internalType": "struct EncodeType.Voucher",
          "name": "_voucher",
          "type": "tuple"
        }
      ],
      "name": "getTypedDataDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "_digest",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isSecondaryMarket",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "tokenURI",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ERC1271Account",
              "type": "address"
            },
            {
              "internalType": "uint16[]",
              "name": "royaltyBps",
              "type": "uint16[]"
            },
            {
              "internalType": "uint16[]",
              "name": "commissionBps",
              "type": "uint16[]"
            },
            {
              "internalType": "address[]",
              "name": "royaltyRecipients",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "commissionRecipients",
              "type": "address[]"
            }
          ],
          "internalType": "struct EncodeType.Voucher",
          "name": "_voucher",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "lazyBuy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "tokenURI",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "buyerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "ERC1271Account",
              "type": "address"
            },
            {
              "internalType": "uint16[]",
              "name": "royaltyBps",
              "type": "uint16[]"
            },
            {
              "internalType": "uint16[]",
              "name": "commissionBps",
              "type": "uint16[]"
            },
            {
              "internalType": "address[]",
              "name": "royaltyRecipients",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "commissionRecipients",
              "type": "address[]"
            }
          ],
          "internalType": "struct EncodeType.Voucher",
          "name": "_voucher",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "lazyMint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ninfaRoyaltyInfo",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "recipients",
          "type": "address[]"
        },
        {
          "internalType": "uint16[]",
          "name": "bps",
          "type": "uint16[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "royaltyInfo",
      "outputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint16[]",
          "name": "_royaltyBps",
          "type": "uint16[]"
        },
        {
          "internalType": "address[]",
          "name": "_royaltyRecipients",
          "type": "address[]"
        }
      ],
      "name": "setRoyaltyInfo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32[]",
          "name": "_digests",
          "type": "bytes32[]"
        }
      ],
      "name": "voidVouchers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e0604052346200004b576200001e62000018620000e2565b62000105565b60405161483f620002ce823960805181611fef015260a051816114c3015260c05181611f50015261483f90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200008857604052565b62000050565b90620000a56200009d60405190565b928362000066565b565b90565b6001600160a01b038116036200004b57565b90505190620000a582620000aa565b906020828203126200004b57620000a791620000bc565b620000a762004b0d80380380620000f9816200008e565b928339810190620000cb565b6200010f62000114565b60c052565b620000a56200025d565b634e487b7160e01b600052602260045260246000fd5b906001600283049216801562000157575b60208310146200015157565b6200011e565b91607f169162000145565b620000a7620000a7620000a79290565b919062000187620000a76200019f9362000162565b90835460001960089290920291821b191691901b1790565b9055565b620000a59160009162000172565b818110620001bd575050565b80620001cd6000600193620001a3565b01620001b1565b9190601f8111620001e457505050565b620001f8620000a593600052602060002090565b906020601f8401819004830193106200021c575b6020601f909101040190620001b1565b90915081906200020c565b62000240600762000239835462000134565b83620001d4565b600e66697066733a2f2f60c81b019055565b620000a59062000227565b6200026762000273565b620000a5600962000252565b620000a5620000a5620000a5620000a57f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a8666080527fe1b317ae14e3af34085dd8529edfb0af416616d53348dc310331e716d501554260a05256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461024257806306fdde031461023d578063081812fc14610238578063095ea7b3146102335780631177dcdc1461022e57806318160ddd1461022957806323b872dd14610224578063248a9ca31461021f5780632a55205a1461021a5780632f2ff15d146102155780632f745c59146102105780632f8983d31461020b57806336568abe14610206578063422b0d251461020157806342842e0e146101fc57806342966c68146101f7578063439fab91146101f257806343b8736c146101ed5780634f558e79146101e85780634f6ccce7146101e357806355f804b3146101de5780636352211e146101d957806370a08231146101d45780638c3f41b8146101cf57806391d14854146101ca57806392cb4208146101c557806395d89b41146101c0578063990d2fd1146101bb578063a22cb465146101b6578063b510391f146101b1578063b88d4fde146101ac578063bb3bafd6146101a7578063c87b56dd146101a2578063d547741f1461019d5763e985e9c50361024757610fc1565b610f8c565b610f71565b610f43565b610ec4565b610e5b565b610d80565b610d2d565b610d12565b610ced565b610c7b565b610c4d565b610b5f565b610b30565b610b17565b610afc565b610ae1565b610ac7565b610aae565b610a6c565b610a53565b610a39565b610974565b61095b565b6107d2565b6107b9565b610767565b610702565b6106e9565b6106a4565b610679565b610626565b610598565b610531565b61029d565b600080fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081165b0361024757565b905035906102848261024c565b565b906020828203126102475761029a91610277565b90565b34610247576102cb6102b86102b3366004610286565b611015565b6040515b91829182901515815260200190565b0390f35b600091031261024757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b9060016002830492168015610358575b602083101461035357565b610309565b91607f1691610348565b8054600093929161037f61037583610338565b8085529360200190565b91600181169081156103d1575060011461039857505050565b6103ab9192939450600052602060002090565b916000925b8184106103bd5750500190565b8054848401526020909301926001016103b0565b92949550505060ff1916825215156020020190565b9061029a91610362565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff82111761045f57604052565b6103f0565b9061028461047e9261047560405190565b938480926103e6565b038361041f565b906000106104965761029a90610464565b6102da565b61029a60006007610485565b60005b8381106104ba5750506000910152565b81810151838201526020016104aa565b6104eb6104f460209361051c936104df815190565b80835293849260200190565b958691016104a7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b602080825261029a929101906104ca565b34610247576105413660046102cf565b6102cb61054c61049b565b60405191829182610520565b80610270565b9050359061028482610558565b906020828203126102475761029a9161055e565b73ffffffffffffffffffffffffffffffffffffffff1690565b34610247576102cb6105b36105ae36600461056b565b6111b9565b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116610270565b90503590610284826105da565b91906040838203126102475761029a90602061061f82866105f6565b940161055e565b346102475761063f610639366004610603565b9061124f565b604051005b90816101609103126102475790565b9060208282031261024757813567ffffffffffffffff81116102475761029a9201610644565b34610247576102cb61069461068f366004610653565b6114a3565b6040519182918290815260200190565b34610247576106b43660046102cf565b6102cb61069460045490565b90916060828403126102475761029a6106d984846105f6565b93604061061f82602087016105f6565b346102475761063f6106fc3660046106c0565b9161163d565b34610247576102cb61069461071836600461056b565b61165b565b91906040838203126102475761029a90602061061f828661055e565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916102849160200152565b0152565b346102475761078061077a36600461071d565b90611754565b906102cb61078d60405190565b92839283610739565b91906040838203126102475761029a9060206107b2828661055e565b94016105f6565b346102475761063f6107cc366004610796565b9061181a565b34610247576102cb6106946107e8366004610603565b90611824565b906102846107fb60405190565b928361041f565b67ffffffffffffffff811161045f5760208091020190565b61ffff8116610270565b905035906102848261081a565b9092919261084661084182610802565b6107ee565b938185526020808601920283019281841161024757915b83831061086a5750505050565b602080916108788486610824565b81520192019161085d565b9080601f830112156102475781602061029a93359101610831565b909291926108ae61084182610802565b938185526020808601920283019281841161024757915b8383106108d25750505050565b602080916108e084866105f6565b8152019201916108c5565b9080601f830112156102475781602061029a9335910161089e565b916060838303126102475761091b828461055e565b92602081013567ffffffffffffffff8111610247578361093c918301610883565b92604082013567ffffffffffffffff81116102475761029a92016108eb565b346102475761063f61096e366004610906565b91611857565b346102475761063f610987366004610796565b9061187e565b909182601f830112156102475781359167ffffffffffffffff831161024757602001926001830284011161024757565b919060808382031261024757823567ffffffffffffffff811161024757816109e6918501610644565b92602081013567ffffffffffffffff81116102475782610a0791830161098d565b929093604083013567ffffffffffffffff81116102475782610a3060609461029a93870161098d565b949095016105f6565b61063f610a473660046109bd565b949390939291926119fa565b346102475761063f610a663660046106c0565b91611b8f565b346102475761063f610a7f36600461056b565b611ba3565b9060208282031261024757813567ffffffffffffffff811161024757610aaa920161098d565b9091565b346102475761063f610ac1366004610a84565b90611f37565b61063f610ad53660046109bd565b94939093929192612107565b34610247576102cb6102b8610af736600461056b565b6122e8565b34610247576102cb610694610b1236600461056b565b612318565b346102475761063f610b2a366004610a84565b90612324565b34610247576102cb6105b3610b4636600461056b565b612343565b906020828203126102475761029a916105f6565b34610247576102cb610694610b75366004610b4b565b612396565b90610b9a610b93610b89845190565b8084529260200190565b9260200190565b9060005b818110610bab5750505090565b909192610bde610bd7600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460200190565b929101610b9e565b90610bf5610b93610b89845190565b9060005b818110610c065750505090565b909192610c20610bd7600192865161ffff16815260200190565b929101610bf9565b604080825261029a939192610c3f91840190610b7a565b916020818403910152610be6565b3461024757610c65610c6036600461056b565b6124a6565b906102cb610c7260405190565b92839283610c28565b34610247576102cb6102b8610c91366004610796565b906124c2565b909182601f830112156102475781359167ffffffffffffffff831161024757602001926020830284011161024757565b9060208282031261024757813567ffffffffffffffff811161024757610aaa9201610c97565b346102475761063f610d00366004610cc7565b90612569565b61029a60006008610485565b3461024757610d223660046102cf565b6102cb61054c610d06565b34610247576102cb6102b8610d4336600461056b565b612618565b801515610270565b9050359061028482610d48565b91906040838203126102475761029a906020610d7982866105f6565b9401610d50565b346102475761063f610d93366004610d5d565b90612636565b67ffffffffffffffff811161045f57602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90826000939282370152565b90929192610df061084182610d99565b938185528183011161024757610284916020850190610dd4565b9080601f830112156102475781602061029a93359101610de0565b91909160408184031261024757610e3c83826105f6565b92602082013567ffffffffffffffff81116102475761029a9201610e0a565b346102475761063f610e6e366004610e25565b90612665565b9060808282031261024757610e8981836105f6565b92610e9782602085016105f6565b92610ea5836040830161055e565b92606082013567ffffffffffffffff81116102475761029a9201610e0a565b346102475761063f610ed7366004610e74565b9291909161266f565b90610eef610b93610b89845190565b9060005b818110610f005750505090565b909192610f16610bd76001928651815260200190565b929101610ef3565b604080825261029a939192610f3591840190610b7a565b916020818403910152610ee0565b3461024757610f5b610f5636600461056b565b612688565b906102cb610f6860405190565b92839283610f1e565b34610247576102cb61054c610f8736600461056b565b6127bc565b346102475761063f610f9f366004610796565b90612881565b91906040838203126102475761029a9060206107b282866105f6565b34610247576102cb6102b8610fd7366004610fa5565b9061288b565b610ff0610fea61029a9290565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6110226380ac58cd610fdd565b7fffffffff00000000000000000000000000000000000000000000000000000000821614908115611154575b811561111b575b81156110e2575b81156110a9575b811561106d575090565b90506110a561107f637965db0b610fdd565b917fffffffff000000000000000000000000000000000000000000000000000000001690565b1490565b90506110b8632a55205a610fdd565b7fffffffff0000000000000000000000000000000000000000000000000000000082161490611063565b90506110f16301ffc9a7610fdd565b7fffffffff000000000000000000000000000000000000000000000000000000008216149061105c565b905061112a635b5e139f610fdd565b7fffffffff0000000000000000000000000000000000000000000000000000000082161490611055565b905061116363780e9d63610fdd565b7fffffffff000000000000000000000000000000000000000000000000000000008216149061104e565b1561024757565b61029a61029a61029a9290565b906111ab90611194565b600052602052604060002090565b6111e161029a916111c8600090565b506111da6111d5826122e8565b61118d565b60056111a1565b5473ffffffffffffffffffffffffffffffffffffffff1690565b61057f61029a61029a9273ffffffffffffffffffffffffffffffffffffffff1690565b61029a906111fb565b61029a9061121e565b906111ab90611227565b61029a905b60ff1690565b61029a905461123a565b906102849161128761126083612343565b73ffffffffffffffffffffffffffffffffffffffff8116331490811561128c575b5061118d565b6128de565b6112ab915061129f6112a6916006611230565b3390611230565b611245565b38611281565b61029a9081565b61029a90546112b1565b3561029a81610558565b3561029a816105da565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe13682900301821215610247570180359067ffffffffffffffff82116102475760200191602082023603831361024757565b5061029a906020810190610824565b906000825b82821061134d575050505090565b90919293611377611370600192611364888661132b565b61ffff16815260200190565b9560200190565b9392019061133f565b909161029a9261133a565b5061029a9060208101906105f6565b906000825b8282106113ad575050505090565b909192936113e26113706001926113c4888661138b565b73ffffffffffffffffffffffffffffffffffffffff16815260200190565b9392019061139f565b909161029a9261139a565b98969492909b9a99979593916101608a019c60008b01611414919052565b60208a015260408901526060880152608087015260a086015273ffffffffffffffffffffffffffffffffffffffff1660c085015260e08401526101008301526101208201526101400152565b602080939261149d61149861051c947f1901000000000000000000000000000000000000000000000000000000000000815260020190565b918252565b01918252565b61162e611558916114b2600090565b506114bd60016112b8565b9061160a7f00000000000000000000000000000000000000000000000000000000000000006114eb836112c2565b906115586114fb602086016112c2565b94611508604082016112c2565b90611515606082016112c2565b611521608083016112c2565b61152d60a084016112cc565b61155861156461154060e08701876112d6565b9061154a60405190565b938492602084019283611380565b9081038252038261041f565b61157661156f825190565b9160200190565b209161155861158c6115406101008801886112d6565b61159761156f825190565b20936115586115e66115b66115586115ce6115b66101208c018c6112d6565b906115c060405190565b9384926020840192836113eb565b6115d961156f825190565b20986101408101906112d6565b6115f161156f825190565b20966115fc60405190565b9c8d9b60208d019b8c6113f6565b61161561156f825190565b209061162060405190565b938492602084019283611460565b61163961156f825190565b2090565b9061028492916116506111d58433612947565b612a2b565b906111ab565b600161167461029a9261166c600090565b506000611655565b016112b8565b61029a905b61ffff1690565b61029a905461167a565b61167f61029a61029a9290565b61029a61029a61029a9261ffff1690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818102929181159184041417156116f057565b6116ae565b61029a612710611690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90611739565b9190565b908115611744570490565b611700565b61029a6103e8611690565b91906003611782600061176786846111a1565b015473ffffffffffffffffffffffffffffffffffffffff1690565b936117978261179183826111a1565b01611686565b6117ac6117a46000611690565b9161ffff1690565b036117e05750506117cf61029a916117ca6117c5611749565b61169d565b6116dd565b6117da6117c56116f5565b9061172f565b916117ca6117c58361179161029a966117cf966111a1565b90610284916118106118098261165b565b3390612ae9565b9061028491612b91565b90610284916117f8565b61029a9061185161183761057f85612343565b9173ffffffffffffffffffffffffffffffffffffffff1690565b1461118d565b90610284929161187961187060006117678460036111a1565b61185133611837565b612ed7565b61028491906118a33373ffffffffffffffffffffffffffffffffffffffff8416611851565b613012565b61057f61029a61029a9290565b61029a906118a8565b61029a60006118b5565b61029a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6611194565b61029a913691610de0565b818352602090920191906000825b828210611918575050505090565b9091929361192f6113706001926113c4888661138b565b9392019061190a565b818352602090920191906000825b828210611954575050505090565b9091929361196b611370600192611364888661132b565b93920190611946565b606080825261029a9591946119a094909361199292870191906118fc565b918483036020860152611938565b9060408183039101526000815260200190565b90815260406020820181905261029a929101906104ca565b9062ff00009060101b5b9181191691161790565b906119ef61029a6119f692151590565b82546119cb565b9055565b90611b0890611b0e9361028497600197600397611a23611a1c602089016112c2565b3490611851565b600454968794611a32826114a3565b9660c08301611a40816112cc565b611a4e61183761057f6118be565b03611b145750916111d59786611a75611a6f611afd95611b029998976118f1565b8361318f565b91611a8a839b8c94611a856118c8565b6124c2565b611af6611558611aef611ad2611a9f886112c2565b611ade611ab06101208b018b6112d6565b90611abe60e08d018d6112d6565b604051919691968794602086019485611974565b9081038252038361041f565b6040519384926020840192836119b3565b8b856131e4565b34936131f9565b6118f1565b926133cd565b826111a1565b016119df565b918689611b4d611b0298979694611b2d611afd976112cc565b809d8e96611b3d83611a856118c8565b9384611b52575b5050505061118d565b611a8a565b611b67945090611b61916118f1565b916130a7565b38838180611b44565b9061149861084183610d99565b61029a6000611b70565b61029a611b7d565b909161028492611b9d611b87565b9261266f565b61028490611bb46111d58233612947565b6133e4565b909160608284031261024757813567ffffffffffffffff81116102475783611be2918401610e0a565b9260208301359067ffffffffffffffff82116102475760406107b28261029a948701610e0a565b919060086119d5910291611c3c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190611c5261029a6119f693611194565b908354611c09565b61028491600091611c41565b818110611c71575050565b80611c7f6000600193611c5a565b01611c66565b9190601f8111611c9457505050565b611ca661028493600052602060002090565b906020601f840181900483019310611cc8575b6020601f909101040190611c66565b9091508190611cb9565b90611cdb815190565b9067ffffffffffffffff821161045f57611cff82611cf98554610338565b85611c85565b602090601f8311600114611d58576119f6929160009183611d4d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600883021c1916906002021790565b015190503880611d1b565b601f19831691611d6d85600052602060002090565b9260005b818110611dca57509160029391856001969410611d92575b50505002019055565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6008601f8516021c19165b9055388080611d89565b91936020600181928787015181550195019201611d71565b9061028491611cd2565b61029a6000611194565b61029a7f850d585eb7f024ccee5e68e55f2c26cc72e1e6ee456acf62135757a5eb9d4a10611194565b80546000939291611e3261037583610338565b91600181169081156103d15750600114611e4b57505050565b611e5e9192939450600052602060002090565b916000925b818410611e705750500190565b805484840152602090930192600101611e63565b9061029a91611e1f565b9061028461047e92611e9f60405190565b93848092611e84565b61029a90611e8e565b611ede61028494611ed7606094989795611ed0608086019a6000870152565b6020850152565b6040830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906119d5565b90611f3061029a6119f69290565b8254611efa565b611faf611fa0611f96611fa893611fea95611f8e611f887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690565b33611851565b810190611bb9565b9491929094611227565b936008611de2565b6007611de2565b611fc081611fbb611dec565b612b91565b611fc8611df6565b90611fd38183612b91565b611fe5611fde6118c8565b9182612b91565b613413565b6102847f000000000000000000000000000000000000000000000000000000000000000061204e61201b6007611ea8565b61202661156f825190565b209161203130611227565b9261155861203e60405190565b9485936020850193469185611eb1565b61205961156f825190565b206001611f22565b80156116f0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906120c4825190565b8110156120d5576020809102010190565b61208c565b919082039182116116f057565b9060ff906119d5565b9061210061029a6119f692151590565b82546120e7565b9290939594916121236121299161211d866114a3565b966118f1565b8561318f565b92612136602082016112c2565b60008161214282611194565b811161219a575b50508361219093612182610284999a61217c606087612176612189988d60019f9d6121959f9c8f906131f9565b016112c2565b926118f1565b91846133cd565b6002611230565b611655565b6120f0565b6121a5903490611851565b6121b96121b4606085016112c2565b6139da565b916121c2825190565b90816121d061173583611194565b116121dd575b5050612149565b96929a90999591989487989498506121f3600090565b5060015b15612280575b879a61220890612061565b9a8b996122158b8f6120bb565b5161ffff166122239061169d565b61222d90346116dd565b612238612710611194565b6122419161172f565b908161224c916120da565b9c612257908d6120bb565b5173ffffffffffffffffffffffffffffffffffffffff169061227891613ad9565b9a989a6121f7565b61228988611194565b8b116121fd57909a50949850929650909490935090919083836121826102846121d6565b80548210156120d5576122c7600191600052602060002090565b91020190600090565b61029a916008021c61057f565b9061029a91546122d0565b6122ff612305916122f7600090565b5060046122ad565b906122dd565b61231361183761057f6118be565b141590565b61029a6111d5826122e8565b906102849161233e6111d5612337611dec565b33906124c2565b613c0a565b6122ff612352916122f7600090565b908161236261183761057f6118be565b1461024757565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116f05760010190565b6000906123a461057f6118be565b73ffffffffffffffffffffffffffffffffffffffff821614610247576123ca6000611194565b906004936123d760045490565b935b845b811015612437576123f261057f6122ff83896122ad565b73ffffffffffffffffffffffffffffffffffffffff84161461241e575b6123db906001015b90506123d9565b9261241761242e6123db92612369565b9491505061240f565b50935050905090565b1561244757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f496e76616c69642063616c6c00000000000000000000000000000000000000006044820152606490fd5b610aaa906121b4333b6124bc6117356000611194565b11612440565b61029a9160006124de6112a6936124d7600090565b5082611655565b01611230565b91908110156120d5576020020190565b9037565b8183529091602001917f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610247578291602061051c92029384916124f4565b73ffffffffffffffffffffffffffffffffffffffff91909116815260406020820181905261029a939101916124f8565b90809260015b156125b3575b612580600094612061565b936125ae6001612195876125a86125a361259b336002611230565b92898b6124e4565b6112c2565b90611655565b61256f565b6125bd6000611194565b84116125755792507f20298bf7cad93b940d82595aa66e33a5646f39ce609d0e8ed4c7c0c08660e0c1916125fd6125f360405190565b9283923384612539565b0390a1565b61029a9060101c61123f565b61029a9054612602565b600361263061029a92612629600090565b50826111a1565b0161260e565b906102849133613c16565b90610284916126516118096118c8565b906102849161265f60045490565b906131e4565b9061028491612641565b906102849392916126836111d58433612947565b6133cd565b61269860006117678360036111a1565b6126a861183761057f60006118b5565b1461024757610aaa90613d44565b6126c96126c361029a9290565b60f01b90565b7fffff0000000000000000000000000000000000000000000000000000000000001690565b8054600093929161270561270183610338565b9390565b9160018116908115612756575060011461271e57505050565b6127319192939450600052602060002090565b6000905b8382106127425750500190565b600181602092548486015201910190612735565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b61051c61279f92602092612799815190565b94859290565b938491016104a7565b6127b69061029a93926126ee565b90612787565b61284861155861284361029a936127d1606090565b506127de6111d5826122e8565b6127fc6127f76127ef6112206126b6565b92600a6111a1565b6112b8565b9061280660405190565b93849260208401928360028161149d61051c93602096957fffff000000000000000000000000000000000000000000000000000000000000169052565b613eb9565b61029a61285460405190565b809261155860208301916009836127a8565b90610284916128776118098261165b565b9061028491613012565b9061028491612866565b61029a916128a66112a69261289e600090565b506006611230565b611230565b9073ffffffffffffffffffffffffffffffffffffffff906119d5565b906128d761029a6119f692611227565b82546128ab565b906128f3826128ee8360056111a1565b6128c7565b61291661291061290a61290584612343565b611227565b93611227565b91611194565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561294160405190565b600090a4565b6129536111d5836122e8565b61295c82612343565b73ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8316149283156129b3575b50821561299f57505090565b61029a9250906128a66112a6926006611230565b6129c49193506111e19060056111a1565b6129e373ffffffffffffffffffffffffffffffffffffffff8316611837565b149138612993565b919060086119d5910291611c3c73ffffffffffffffffffffffffffffffffffffffff841b90565b9190612a2361029a6119f693611227565b9083546129eb565b919091612a59612a3a83612343565b61185173ffffffffffffffffffffffffffffffffffffffff8416611837565b612a616118be565b9073ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff8516146102475761290a61291091612aa985612abe956128de565b61290586612ab88760046122ad565b90612a12565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61294160405190565b612afa91612af6916124c2565b1590565b612b0057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4163636f756e74206973206d697373696e6720726f6c650000000000000000006044820152606490fd5b90815273ffffffffffffffffffffffffffffffffffffffff909116602082015260608101929161028491604090611ede565b612b9e612af683836124c2565b612ba6575050565b81612bdd60016121957f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9560006124de8782611655565b6125fd612be960405190565b928392339184612b5f565b612c019061ffff166117a4565b019061ffff82116116f057565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612c3e916020036008021c90565b8154169055565b919091828210612c5457505050565b6102849291612c699091600052602060002090565b9182019101611c66565b9068010000000000000000811161045f5781612c90610284935490565b90828155612c45565b81519167ffffffffffffffff831161045f57612cd0612cc4600192612cbe8686612c73565b60200190565b92600052602060002090565b92049160005b838110612ce35750505050565b6001906020612d0961029a865173ffffffffffffffffffffffffffffffffffffffff1690565b9401938184015501612cd6565b9061028491612c99565b919091828210612d2f57505050565b610284926010600f909101049060026010612d56600f860182900493600052602060002090565b92830194060260008111612d6d575b500190611c66565b612d7a9060018503612c0e565b38612d65565b9068010000000000000000811161045f5781612d9d610284935490565b90828155612d20565b919060086119d5910291611c3c61ffff841b90565b61167f61029a61029a9261ffff1690565b90612dd5815190565b9067ffffffffffffffff821161045f57612cc4612df691612cbe8486612d80565b601082049160005b838110612e66575060108302900360008111612e1b575b50505050565b9260009360005b818110612e3757505050015538808080612e15565b9091946020612e5c600192612e5161029a8a5161ffff1690565b908560020290612da6565b9601929101612e22565b6000805b60108110612e7f575083820155600101612dfe565b95906020612ea3600192612e9861029a865161ffff1690565b908a60020290612da6565b92019601612e6a565b9061028491612dcc565b9061ffff906119d5565b90612ed061029a6119f692612dbb565b8254612eb6565b9291612ee1825190565b80612ef6612ef061029a855190565b83611851565b600091600190612f096117356001611194565b03612f6c57505050612f666102849394611b08612f3a612f32612f2c6000611194565b876120bb565b5161ffff1690565b945b612f546003956001612f4e86896111a1565b01612d16565b6002612f6084876111a1565b01612eac565b01612ec0565b93959193906001825b612fa7575b505050612f6690611b086102849596612fa2612f9761167f6116f5565b61ffff88161061118d565b612f3c565b94919415612ffb575b612ff2612fde6000927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b92612fec612f32858b6120bb565b90612bf4565b94919082612f75565b6130056000611194565b8111612fb0578194612f7a565b61301c82826124c2565b613024575050565b81612bdd60006121957ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b95826124de8782611655565b61029a631626ba7e610fdd565b3d15613081576130763d611b70565b903d6000602084013e565b606090565b9050519061028482610558565b906020828203126102475761029a91613086565b6000919282916130b5600090565b506130ef6130c161305a565b956130e06130ce60405190565b9485926004602085018b8152016119b3565b6020820181038252038361041f565b602082519201905afa90613101613067565b8261313c575b8261311157505090565b6110a591925061029a61313682602061312b611735955190565b818301019101613093565b93610ff0565b9150613146825190565b6131536117356020611194565b1491613107565b61076361028494611ed7606094989795613179608086019a6000870152565b60ff166020850152565b6040513d6000823e3d90fd5b6020916000916131bc848301519260606040820151910151851a936131b360405190565b9485948561315a565b838052039060015afa156131df57600051908161236261183761057f60006118b5565b613183565b906102849291614159565b3561029a8161081a565b94939291906132239161320e604088016112c2565b421091826133ae575b508161334a575061118d565b61322f602085016112c2565b61323c6117356000611194565b11613248575b50509050565b61325e6132596101408601866112d6565b905090565b8061326c6117356000611194565b11613286575b5061327e929350613ad9565b803880613242565b9084929391613293600090565b5060015b1561331a575b6133126132dc9561330d6133086132f96132f26132e76132e16117c56132c460009a612061565b9d8e6132d6819f6101008101906112d6565b906124e4565b6131ef565b346116dd565b6117da612710611194565b80946120da565b986132d66101408c018c6112d6565b6112cc565b613ad9565b928593613297565b91939092506133296000611194565b82111561333a57929091849261329d565b91905061327e9293508392613272565b60a087019150613359826112cc565b61336961183761057f60006118b5565b1491821561337a575b505038611281565b6133a691925061338c611837916112cc565b9273ffffffffffffffffffffffffffffffffffffffff1690565b143880613372565b6133c69192506112a6612af691612190876002611230565b9038613217565b906102849392916133df838383612a2b565b614231565b610284906133f181614371565b6143a1565b908152606081019392610284929091604091610763906020830152565b907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff916125fd6134428261165b565b9261345a816001613454866000611655565b01611f22565b604051938493846133f6565b90613475612cc4610b89845490565b9060005b8181106134865750505090565b9091926134b76134b06001926113c4875473ffffffffffffffffffffffffffffffffffffffff1690565b9460010190565b929101613479565b9061029a91613466565b9061028461047e926134da60405190565b938480926134bf565b61029a906134c9565b61029a9060101c61167f565b61029a9060201c61167f565b61029a9060301c61167f565b61029a9060401c61167f565b61029a9060501c61167f565b61029a9060601c61167f565b61029a9060701c61167f565b61029a9060801c61167f565b61029a9060901c61167f565b61029a9060a01c61167f565b61029a9060b01c61167f565b61029a9060c01c61167f565b61029a9060d01c61167f565b61029a9060e01c61167f565b61029a9060f01c61167f565b906135af612cc4610b89845490565b906000915b600f830182116138185754908083106137fb575b8083106137de575b8083106137c1575b8083106137a4575b808310613787575b80831061376a575b80831061374d575b808310613730575b808310613713575b8083106136f6575b8083106136d9575b8083106136bc575b80831061369f575b808310613682575b808310613665575b821061364357505090565b8261365e60019394613656602094613594565b61ffff169052565b0191505090565b919260208161367960019361365686613588565b01930191613638565b91926020816136966001936136568661357c565b01930191613630565b91926020816136b360019361365686613570565b01930191613628565b91926020816136d060019361365686613564565b01930191613620565b91926020816136ed60019361365686613558565b01930191613618565b919260208161370a6001936136568661354c565b01930191613610565b919260208161372760019361365686613540565b01930191613608565b919260208161374460019361365686613534565b01930191613600565b919260208161376160019361365686613528565b019301916135f8565b919260208161377e6001936136568661351c565b019301916135f0565b919260208161379b60019361365686613510565b019301916135e8565b91926020816137b860019361365686613504565b019301916135e0565b91926020816137d5600193613656866134f8565b019301916135d8565b91926020816137f2600193613656866134ec565b019301916135d0565b919260208161380f6001936136568661167a565b019301916135c8565b92835490806138268361167a565b61ffff16905260200180613839836134ec565b61ffff1690526020018061384c836134f8565b61ffff1690526020018061385f83613504565b61ffff1690526020018061387283613510565b61ffff169052602001806138858361351c565b61ffff1690526020018061389883613528565b61ffff169052602001806138ab83613534565b61ffff169052602001806138be83613540565b61ffff169052602001806138d18361354c565b61ffff169052602001806138e483613558565b61ffff169052602001806138f783613564565b61ffff1690526020018061390a83613570565b61ffff1690526020018061391d8361357c565b61ffff1690526020018061393083613588565b61ffff1690526020016139438192613594565b61ffff1690526020019260010191601001916135b4565b9061029a916135a0565b9061028461047e9261397560405190565b9384809261395a565b61029a90613964565b9061149861084183610802565b369037565b906102846139af6139a984613987565b93610802565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401613994565b60609182916003906139f08261263083826111a1565b600090613a08575081611b0e600192610284946111a1565b91819550809450611791613a1c92826111a1565b613a286117a483611690565b03613aac5761028490613aa3613a3e6001611194565b95613a92613a4b88613999565b613a77613a6786611767613a5f859d613999565b96879c6111a1565b91613a7187611194565b906120bb565b9073ffffffffffffffffffffffffffffffffffffffff169052565b613a71613a9d611749565b93611194565b9061ffff169052565b5090916002613ad382613acd6001613ac761029a96896111a1565b016134e3565b956111a1565b0161397e565b600061028492613aec6129058394611227565b90613af660405190565b90818003925af1611281613067565b919067ffffffffffffffff821161045f57613b2482611cf98554610338565b600090601f8311600114613b7c576119f6929160009183613b715750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600883021c1916906002021790565b013590503880611d1b565b90601f19831691613b9285600052602060002090565b92825b818110613be757509160029391856001969410613bb55750505002019055565b01357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f84166008021c1916611dc0565b92936020600181928786013581550195019301613b95565b906102849291613b05565b90610284916009613bff565b73ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff82161461024757613c91613c8761290a8361290587612195886128a67f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996006611230565b936102bc60405190565b0390a3565b61029a60a06107ee565b90610284613d326003613cb1613c96565b94613ced613cd3825473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff168752565b613d03613cfc600183016134c9565b6020880152565b613d19613d1260028301613964565b6040880152565b612630613d27838301611686565b61ffff166060880152565b15156080840152565b61029a90613ca0565b613d57613d528260036111a1565b613d3b565b916020830192613d6684515190565b90600094613d7386611194565b8303613dc857505050610284613d896001611194565b93613dc5613d9686613999565b613db7613da38298613999565b91613a77613a6786611767869b60036111a1565b613a71613a9d6117c5611749565b52565b9092949193505190613dd984613999565b94613de48692611194565b855b811015613e2257613e1b81613e15613e0b6117c5612f32613de69660408c01516120bb565b613dc5838c6120bb565b60010190565b9050613de4565b50925092509250565b906102846139af613e3b84611b70565b93610d99565b61123f61029a61029a9290565b90613e57825190565b8110156120d5570160200190565b61123f61029a61029a9260ff1690565b61029a9060f81c613e65565b61029a61029a61029a9260ff1690565b919082018092116116f057565b8115611744570690565b60ff1660ff81146116f05760010190565b90815191600092613ecc61173585611194565b146140cc57613ee3613ede6040611194565b613999565b92613f04613ef082613e41565b613efc612f2c84611194565b9060ff169052565b60018091613f126001613e41565b93613f1c82611194565b935b613f42575b50505050613f38613f3d9161029a93946143bf565b614411565b6144ed565b613f5161029a82979695975190565b8610156140c357613f9b613f96613f91613f6b8985613e4e565b517fff000000000000000000000000000000000000000000000000000000000000001690565b613e75565b613e81565b838089613fa786611194565b915b614034575b50505b613fca575b50613fc48394959660010190565b93613f1e565b613fd78397969597611194565b81111561402b5761402584916117da61401f61400598999a61401a8d613efc61401061400b603a9e8f611194565b89613e9e565b613e41565b91613a7185613e81565b613ea8565b97611194565b90613fb1565b95939495613fb6565b909261403f88613e81565b8410156140bb576140ad6140816140b49261407b61406a613f966140638a896120bb565b5160ff1690565b614075610100611194565b906116dd565b90613e91565b6117da603a6140a861409e61400b61409884611194565b86613e9e565b613efc8a896120bb565b611194565b9360010190565b9082613fa9565b925080613fae565b83949550613f23565b50906140da61029a91611194565b613e2b565b909291926140ef61084182610d99565b9381855281830111610247576102849160208501906104a7565b9080601f8301121561024757815161029a926020016140df565b9190916040818403126102475761413a8382613086565b92602082015167ffffffffffffffff81116102475761029a9201614109565b91614173906020614168825190565b818301019101614123565b9190926141806000611194565b841480156141b9575b610247576141b46001612195866141ad610284986141a888600a6111a1565b611f22565b600b611655565b6146af565b506141c86112a685600b611655565b614189565b905051906102848261024c565b906020828203126102475761029a916141cd565b73ffffffffffffffffffffffffffffffffffffffff91821681529116602082015261029a92608082019290919061422490611ed7565b60608184039101526104ca565b9092833b6142426117356000611194565b14928315614258575b505050610284915061118d565b602092935061426c61290561429b96611227565b90600063150b7a029561427e60405190565b9788958694859361428f8b60e01b90565b855233600486016141ee565b03925af19081156131df57610284926000926142c8575b5061107f6142bf91610fdd565b1438808061424b565b6142bf9192506142f261107f9160203d6020116142fa575b6142ea818361041f565b8101906141da565b9291506142b2565b503d6142e0565b600061028491612c73565b906000036104965761028490614301565b600061028491612d80565b90600003610496576102849061431d565b60008082559060039061434f836001830161430c565b61435c8360028301614328565b0155565b906000036104965761028490614339565b60006143816102849260036111a1565b614360565b9190611c5261029a6119f69390565b61028491600091614386565b610284906143ba60006143b583600a6111a1565b614395565b614718565b91906143ca90613e81565b916143d483613999565b916143df6000611194565b8481101561440a5780613e156143fb61406361440594876120bb565b613efc83886120bb565b6143df565b5092505090565b61441c613ede825190565b906144276000611194565b61443261029a835190565b81101561447f5780613e1561447061406361446a61447a95614465614455895190565b61445f6001611194565b906120da565b6120da565b866120bb565b613efc83876120bb565b614427565b505090565b61448e603a611b70565b7f31323334353637383941424344454647484a4b4c4d4e5051525354555657585960208201527f5a6162636465666768696a6b6d6e6f707172737475767778797a000000000000604082015290565b61029a614484565b61029a6144dd565b906144f96140da835190565b6000926145066000611194565b61451161029a835190565b8110156145585761455390614540613f6b61452a6144e5565b61453a613f9661406386896120bb565b90613e4e565b861a61454c8286613e4e565b5360010190565b614506565b5090925050565b90505190610284826105da565b9092919261457c61084182610802565b938185526020808601920283019281841161024757915b8383106145a05750505050565b602080916145ae848661455f565b815201920191614593565b9080601f8301121561024757815161029a9260200161456c565b905051906102848261081a565b909291926145f061084182610802565b938185526020808601920283019281841161024757915b8383106146145750505050565b6020809161462284866145d3565b815201920191614607565b9080601f8301121561024757815161029a926020016145e0565b9160608383031261024757825167ffffffffffffffff8111610247578261466f9185016145b9565b92602081015167ffffffffffffffff8111610247578361469091830161462d565b92604082015167ffffffffffffffff81116102475761029a9201614109565b906146cc6102849360206146c1825190565b818301019101614647565b93916146d6815190565b6146e36117356000611194565b11614707575b50506147028160006146fc8560036111a1565b016128c7565b614752565b6147119184612ed7565b38806146e9565b6102849061472581614371565b6147fe565b908154916801000000000000000083101561045f5782612ab8916001610284950181556122ad565b919061475e60006118b5565b9273ffffffffffffffffffffffffffffffffffffffff841673ffffffffffffffffffffffffffffffffffffffff82161461024757610284936147a182600461472a565b6147ac6129056118be565b6147b583611227565b6147be85611194565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6147e960405190565b600090a4614231565b61028491600091612a12565b614813600061480e8360056111a1565b6147f2565b6148276148218260046122ad565b906147f2565b61482f6118be565b90612abe61291061290a3361122756",
    "sourceMap": "1542:11910:9:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1542:11910:9;;;;;;-1:-1:-1;;;;;1542:11910:9;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;1542:11910:9;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;13384:66::-;;;:::i;:::-;13424:19;;13384:66::o;1262:925:6:-;;;:::i;1542:11910:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1542:11910:9;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1542:11910:9;;;;;;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1542:11910:9;;:::o;:::-;;;;:::i;857:3746:7:-;;;:::i;:::-;1222:9;;;:::i;920:1657:8:-;;838:350:5;1237:8466:3;1615:5647:11;6881:80:12;6863:98;;6991:276;6972:295;;6838:437",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461024257806306fdde031461023d578063081812fc14610238578063095ea7b3146102335780631177dcdc1461022e57806318160ddd1461022957806323b872dd14610224578063248a9ca31461021f5780632a55205a1461021a5780632f2ff15d146102155780632f745c59146102105780632f8983d31461020b57806336568abe14610206578063422b0d251461020157806342842e0e146101fc57806342966c68146101f7578063439fab91146101f257806343b8736c146101ed5780634f558e79146101e85780634f6ccce7146101e357806355f804b3146101de5780636352211e146101d957806370a08231146101d45780638c3f41b8146101cf57806391d14854146101ca57806392cb4208146101c557806395d89b41146101c0578063990d2fd1146101bb578063a22cb465146101b6578063b510391f146101b1578063b88d4fde146101ac578063bb3bafd6146101a7578063c87b56dd146101a2578063d547741f1461019d5763e985e9c50361024757610fc1565b610f8c565b610f71565b610f43565b610ec4565b610e5b565b610d80565b610d2d565b610d12565b610ced565b610c7b565b610c4d565b610b5f565b610b30565b610b17565b610afc565b610ae1565b610ac7565b610aae565b610a6c565b610a53565b610a39565b610974565b61095b565b6107d2565b6107b9565b610767565b610702565b6106e9565b6106a4565b610679565b610626565b610598565b610531565b61029d565b600080fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081165b0361024757565b905035906102848261024c565b565b906020828203126102475761029a91610277565b90565b34610247576102cb6102b86102b3366004610286565b611015565b6040515b91829182901515815260200190565b0390f35b600091031261024757565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b9060016002830492168015610358575b602083101461035357565b610309565b91607f1691610348565b8054600093929161037f61037583610338565b8085529360200190565b91600181169081156103d1575060011461039857505050565b6103ab9192939450600052602060002090565b916000925b8184106103bd5750500190565b8054848401526020909301926001016103b0565b92949550505060ff1916825215156020020190565b9061029a91610362565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810190811067ffffffffffffffff82111761045f57604052565b6103f0565b9061028461047e9261047560405190565b938480926103e6565b038361041f565b906000106104965761029a90610464565b6102da565b61029a60006007610485565b60005b8381106104ba5750506000910152565b81810151838201526020016104aa565b6104eb6104f460209361051c936104df815190565b80835293849260200190565b958691016104a7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b0190565b602080825261029a929101906104ca565b34610247576105413660046102cf565b6102cb61054c61049b565b60405191829182610520565b80610270565b9050359061028482610558565b906020828203126102475761029a9161055e565b73ffffffffffffffffffffffffffffffffffffffff1690565b34610247576102cb6105b36105ae36600461056b565b6111b9565b6040519182918273ffffffffffffffffffffffffffffffffffffffff909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff8116610270565b90503590610284826105da565b91906040838203126102475761029a90602061061f82866105f6565b940161055e565b346102475761063f610639366004610603565b9061124f565b604051005b90816101609103126102475790565b9060208282031261024757813567ffffffffffffffff81116102475761029a9201610644565b34610247576102cb61069461068f366004610653565b6114a3565b6040519182918290815260200190565b34610247576106b43660046102cf565b6102cb61069460045490565b90916060828403126102475761029a6106d984846105f6565b93604061061f82602087016105f6565b346102475761063f6106fc3660046106c0565b9161163d565b34610247576102cb61069461071836600461056b565b61165b565b91906040838203126102475761029a90602061061f828661055e565b73ffffffffffffffffffffffffffffffffffffffff90911681526040810192916102849160200152565b0152565b346102475761078061077a36600461071d565b90611754565b906102cb61078d60405190565b92839283610739565b91906040838203126102475761029a9060206107b2828661055e565b94016105f6565b346102475761063f6107cc366004610796565b9061181a565b34610247576102cb6106946107e8366004610603565b90611824565b906102846107fb60405190565b928361041f565b67ffffffffffffffff811161045f5760208091020190565b61ffff8116610270565b905035906102848261081a565b9092919261084661084182610802565b6107ee565b938185526020808601920283019281841161024757915b83831061086a5750505050565b602080916108788486610824565b81520192019161085d565b9080601f830112156102475781602061029a93359101610831565b909291926108ae61084182610802565b938185526020808601920283019281841161024757915b8383106108d25750505050565b602080916108e084866105f6565b8152019201916108c5565b9080601f830112156102475781602061029a9335910161089e565b916060838303126102475761091b828461055e565b92602081013567ffffffffffffffff8111610247578361093c918301610883565b92604082013567ffffffffffffffff81116102475761029a92016108eb565b346102475761063f61096e366004610906565b91611857565b346102475761063f610987366004610796565b9061187e565b909182601f830112156102475781359167ffffffffffffffff831161024757602001926001830284011161024757565b919060808382031261024757823567ffffffffffffffff811161024757816109e6918501610644565b92602081013567ffffffffffffffff81116102475782610a0791830161098d565b929093604083013567ffffffffffffffff81116102475782610a3060609461029a93870161098d565b949095016105f6565b61063f610a473660046109bd565b949390939291926119fa565b346102475761063f610a663660046106c0565b91611b8f565b346102475761063f610a7f36600461056b565b611ba3565b9060208282031261024757813567ffffffffffffffff811161024757610aaa920161098d565b9091565b346102475761063f610ac1366004610a84565b90611f37565b61063f610ad53660046109bd565b94939093929192612107565b34610247576102cb6102b8610af736600461056b565b6122e8565b34610247576102cb610694610b1236600461056b565b612318565b346102475761063f610b2a366004610a84565b90612324565b34610247576102cb6105b3610b4636600461056b565b612343565b906020828203126102475761029a916105f6565b34610247576102cb610694610b75366004610b4b565b612396565b90610b9a610b93610b89845190565b8084529260200190565b9260200190565b9060005b818110610bab5750505090565b909192610bde610bd7600192865173ffffffffffffffffffffffffffffffffffffffff16815260200190565b9460200190565b929101610b9e565b90610bf5610b93610b89845190565b9060005b818110610c065750505090565b909192610c20610bd7600192865161ffff16815260200190565b929101610bf9565b604080825261029a939192610c3f91840190610b7a565b916020818403910152610be6565b3461024757610c65610c6036600461056b565b6124a6565b906102cb610c7260405190565b92839283610c28565b34610247576102cb6102b8610c91366004610796565b906124c2565b909182601f830112156102475781359167ffffffffffffffff831161024757602001926020830284011161024757565b9060208282031261024757813567ffffffffffffffff811161024757610aaa9201610c97565b346102475761063f610d00366004610cc7565b90612569565b61029a60006008610485565b3461024757610d223660046102cf565b6102cb61054c610d06565b34610247576102cb6102b8610d4336600461056b565b612618565b801515610270565b9050359061028482610d48565b91906040838203126102475761029a906020610d7982866105f6565b9401610d50565b346102475761063f610d93366004610d5d565b90612636565b67ffffffffffffffff811161045f57602090601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b90826000939282370152565b90929192610df061084182610d99565b938185528183011161024757610284916020850190610dd4565b9080601f830112156102475781602061029a93359101610de0565b91909160408184031261024757610e3c83826105f6565b92602082013567ffffffffffffffff81116102475761029a9201610e0a565b346102475761063f610e6e366004610e25565b90612665565b9060808282031261024757610e8981836105f6565b92610e9782602085016105f6565b92610ea5836040830161055e565b92606082013567ffffffffffffffff81116102475761029a9201610e0a565b346102475761063f610ed7366004610e74565b9291909161266f565b90610eef610b93610b89845190565b9060005b818110610f005750505090565b909192610f16610bd76001928651815260200190565b929101610ef3565b604080825261029a939192610f3591840190610b7a565b916020818403910152610ee0565b3461024757610f5b610f5636600461056b565b612688565b906102cb610f6860405190565b92839283610f1e565b34610247576102cb61054c610f8736600461056b565b6127bc565b346102475761063f610f9f366004610796565b90612881565b91906040838203126102475761029a9060206107b282866105f6565b34610247576102cb6102b8610fd7366004610fa5565b9061288b565b610ff0610fea61029a9290565b60e01b90565b7fffffffff000000000000000000000000000000000000000000000000000000001690565b6110226380ac58cd610fdd565b7fffffffff00000000000000000000000000000000000000000000000000000000821614908115611154575b811561111b575b81156110e2575b81156110a9575b811561106d575090565b90506110a561107f637965db0b610fdd565b917fffffffff000000000000000000000000000000000000000000000000000000001690565b1490565b90506110b8632a55205a610fdd565b7fffffffff0000000000000000000000000000000000000000000000000000000082161490611063565b90506110f16301ffc9a7610fdd565b7fffffffff000000000000000000000000000000000000000000000000000000008216149061105c565b905061112a635b5e139f610fdd565b7fffffffff0000000000000000000000000000000000000000000000000000000082161490611055565b905061116363780e9d63610fdd565b7fffffffff000000000000000000000000000000000000000000000000000000008216149061104e565b1561024757565b61029a61029a61029a9290565b906111ab90611194565b600052602052604060002090565b6111e161029a916111c8600090565b506111da6111d5826122e8565b61118d565b60056111a1565b5473ffffffffffffffffffffffffffffffffffffffff1690565b61057f61029a61029a9273ffffffffffffffffffffffffffffffffffffffff1690565b61029a906111fb565b61029a9061121e565b906111ab90611227565b61029a905b60ff1690565b61029a905461123a565b906102849161128761126083612343565b73ffffffffffffffffffffffffffffffffffffffff8116331490811561128c575b5061118d565b6128de565b6112ab915061129f6112a6916006611230565b3390611230565b611245565b38611281565b61029a9081565b61029a90546112b1565b3561029a81610558565b3561029a816105da565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe13682900301821215610247570180359067ffffffffffffffff82116102475760200191602082023603831361024757565b5061029a906020810190610824565b906000825b82821061134d575050505090565b90919293611377611370600192611364888661132b565b61ffff16815260200190565b9560200190565b9392019061133f565b909161029a9261133a565b5061029a9060208101906105f6565b906000825b8282106113ad575050505090565b909192936113e26113706001926113c4888661138b565b73ffffffffffffffffffffffffffffffffffffffff16815260200190565b9392019061139f565b909161029a9261139a565b98969492909b9a99979593916101608a019c60008b01611414919052565b60208a015260408901526060880152608087015260a086015273ffffffffffffffffffffffffffffffffffffffff1660c085015260e08401526101008301526101208201526101400152565b602080939261149d61149861051c947f1901000000000000000000000000000000000000000000000000000000000000815260020190565b918252565b01918252565b61162e611558916114b2600090565b506114bd60016112b8565b9061160a7f00000000000000000000000000000000000000000000000000000000000000006114eb836112c2565b906115586114fb602086016112c2565b94611508604082016112c2565b90611515606082016112c2565b611521608083016112c2565b61152d60a084016112cc565b61155861156461154060e08701876112d6565b9061154a60405190565b938492602084019283611380565b9081038252038261041f565b61157661156f825190565b9160200190565b209161155861158c6115406101008801886112d6565b61159761156f825190565b20936115586115e66115b66115586115ce6115b66101208c018c6112d6565b906115c060405190565b9384926020840192836113eb565b6115d961156f825190565b20986101408101906112d6565b6115f161156f825190565b20966115fc60405190565b9c8d9b60208d019b8c6113f6565b61161561156f825190565b209061162060405190565b938492602084019283611460565b61163961156f825190565b2090565b9061028492916116506111d58433612947565b612a2b565b906111ab565b600161167461029a9261166c600090565b506000611655565b016112b8565b61029a905b61ffff1690565b61029a905461167a565b61167f61029a61029a9290565b61029a61029a61029a9261ffff1690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818102929181159184041417156116f057565b6116ae565b61029a612710611690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b90611739565b9190565b908115611744570490565b611700565b61029a6103e8611690565b91906003611782600061176786846111a1565b015473ffffffffffffffffffffffffffffffffffffffff1690565b936117978261179183826111a1565b01611686565b6117ac6117a46000611690565b9161ffff1690565b036117e05750506117cf61029a916117ca6117c5611749565b61169d565b6116dd565b6117da6117c56116f5565b9061172f565b916117ca6117c58361179161029a966117cf966111a1565b90610284916118106118098261165b565b3390612ae9565b9061028491612b91565b90610284916117f8565b61029a9061185161183761057f85612343565b9173ffffffffffffffffffffffffffffffffffffffff1690565b1461118d565b90610284929161187961187060006117678460036111a1565b61185133611837565b612ed7565b61028491906118a33373ffffffffffffffffffffffffffffffffffffffff8416611851565b613012565b61057f61029a61029a9290565b61029a906118a8565b61029a60006118b5565b61029a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6611194565b61029a913691610de0565b818352602090920191906000825b828210611918575050505090565b9091929361192f6113706001926113c4888661138b565b9392019061190a565b818352602090920191906000825b828210611954575050505090565b9091929361196b611370600192611364888661132b565b93920190611946565b606080825261029a9591946119a094909361199292870191906118fc565b918483036020860152611938565b9060408183039101526000815260200190565b90815260406020820181905261029a929101906104ca565b9062ff00009060101b5b9181191691161790565b906119ef61029a6119f692151590565b82546119cb565b9055565b90611b0890611b0e9361028497600197600397611a23611a1c602089016112c2565b3490611851565b600454968794611a32826114a3565b9660c08301611a40816112cc565b611a4e61183761057f6118be565b03611b145750916111d59786611a75611a6f611afd95611b029998976118f1565b8361318f565b91611a8a839b8c94611a856118c8565b6124c2565b611af6611558611aef611ad2611a9f886112c2565b611ade611ab06101208b018b6112d6565b90611abe60e08d018d6112d6565b604051919691968794602086019485611974565b9081038252038361041f565b6040519384926020840192836119b3565b8b856131e4565b34936131f9565b6118f1565b926133cd565b826111a1565b016119df565b918689611b4d611b0298979694611b2d611afd976112cc565b809d8e96611b3d83611a856118c8565b9384611b52575b5050505061118d565b611a8a565b611b67945090611b61916118f1565b916130a7565b38838180611b44565b9061149861084183610d99565b61029a6000611b70565b61029a611b7d565b909161028492611b9d611b87565b9261266f565b61028490611bb46111d58233612947565b6133e4565b909160608284031261024757813567ffffffffffffffff81116102475783611be2918401610e0a565b9260208301359067ffffffffffffffff82116102475760406107b28261029a948701610e0a565b919060086119d5910291611c3c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff841b90565b921b90565b9190611c5261029a6119f693611194565b908354611c09565b61028491600091611c41565b818110611c71575050565b80611c7f6000600193611c5a565b01611c66565b9190601f8111611c9457505050565b611ca661028493600052602060002090565b906020601f840181900483019310611cc8575b6020601f909101040190611c66565b9091508190611cb9565b90611cdb815190565b9067ffffffffffffffff821161045f57611cff82611cf98554610338565b85611c85565b602090601f8311600114611d58576119f6929160009183611d4d575b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600883021c1916906002021790565b015190503880611d1b565b601f19831691611d6d85600052602060002090565b9260005b818110611dca57509160029391856001969410611d92575b50505002019055565b01517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6008601f8516021c19165b9055388080611d89565b91936020600181928787015181550195019201611d71565b9061028491611cd2565b61029a6000611194565b61029a7f850d585eb7f024ccee5e68e55f2c26cc72e1e6ee456acf62135757a5eb9d4a10611194565b80546000939291611e3261037583610338565b91600181169081156103d15750600114611e4b57505050565b611e5e9192939450600052602060002090565b916000925b818410611e705750500190565b805484840152602090930192600101611e63565b9061029a91611e1f565b9061028461047e92611e9f60405190565b93848092611e84565b61029a90611e8e565b611ede61028494611ed7606094989795611ed0608086019a6000870152565b6020850152565b6040830152565b019073ffffffffffffffffffffffffffffffffffffffff169052565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff906119d5565b90611f3061029a6119f69290565b8254611efa565b611faf611fa0611f96611fa893611fea95611f8e611f887f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690565b33611851565b810190611bb9565b9491929094611227565b936008611de2565b6007611de2565b611fc081611fbb611dec565b612b91565b611fc8611df6565b90611fd38183612b91565b611fe5611fde6118c8565b9182612b91565b613413565b6102847f000000000000000000000000000000000000000000000000000000000000000061204e61201b6007611ea8565b61202661156f825190565b209161203130611227565b9261155861203e60405190565b9485936020850193469185611eb1565b61205961156f825190565b206001611f22565b80156116f0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b906120c4825190565b8110156120d5576020809102010190565b61208c565b919082039182116116f057565b9060ff906119d5565b9061210061029a6119f692151590565b82546120e7565b9290939594916121236121299161211d866114a3565b966118f1565b8561318f565b92612136602082016112c2565b60008161214282611194565b811161219a575b50508361219093612182610284999a61217c606087612176612189988d60019f9d6121959f9c8f906131f9565b016112c2565b926118f1565b91846133cd565b6002611230565b611655565b6120f0565b6121a5903490611851565b6121b96121b4606085016112c2565b6139da565b916121c2825190565b90816121d061173583611194565b116121dd575b5050612149565b96929a90999591989487989498506121f3600090565b5060015b15612280575b879a61220890612061565b9a8b996122158b8f6120bb565b5161ffff166122239061169d565b61222d90346116dd565b612238612710611194565b6122419161172f565b908161224c916120da565b9c612257908d6120bb565b5173ffffffffffffffffffffffffffffffffffffffff169061227891613ad9565b9a989a6121f7565b61228988611194565b8b116121fd57909a50949850929650909490935090919083836121826102846121d6565b80548210156120d5576122c7600191600052602060002090565b91020190600090565b61029a916008021c61057f565b9061029a91546122d0565b6122ff612305916122f7600090565b5060046122ad565b906122dd565b61231361183761057f6118be565b141590565b61029a6111d5826122e8565b906102849161233e6111d5612337611dec565b33906124c2565b613c0a565b6122ff612352916122f7600090565b908161236261183761057f6118be565b1461024757565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116f05760010190565b6000906123a461057f6118be565b73ffffffffffffffffffffffffffffffffffffffff821614610247576123ca6000611194565b906004936123d760045490565b935b845b811015612437576123f261057f6122ff83896122ad565b73ffffffffffffffffffffffffffffffffffffffff84161461241e575b6123db906001015b90506123d9565b9261241761242e6123db92612369565b9491505061240f565b50935050905090565b1561244757565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f496e76616c69642063616c6c00000000000000000000000000000000000000006044820152606490fd5b610aaa906121b4333b6124bc6117356000611194565b11612440565b61029a9160006124de6112a6936124d7600090565b5082611655565b01611230565b91908110156120d5576020020190565b9037565b8183529091602001917f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610247578291602061051c92029384916124f4565b73ffffffffffffffffffffffffffffffffffffffff91909116815260406020820181905261029a939101916124f8565b90809260015b156125b3575b612580600094612061565b936125ae6001612195876125a86125a361259b336002611230565b92898b6124e4565b6112c2565b90611655565b61256f565b6125bd6000611194565b84116125755792507f20298bf7cad93b940d82595aa66e33a5646f39ce609d0e8ed4c7c0c08660e0c1916125fd6125f360405190565b9283923384612539565b0390a1565b61029a9060101c61123f565b61029a9054612602565b600361263061029a92612629600090565b50826111a1565b0161260e565b906102849133613c16565b90610284916126516118096118c8565b906102849161265f60045490565b906131e4565b9061028491612641565b906102849392916126836111d58433612947565b6133cd565b61269860006117678360036111a1565b6126a861183761057f60006118b5565b1461024757610aaa90613d44565b6126c96126c361029a9290565b60f01b90565b7fffff0000000000000000000000000000000000000000000000000000000000001690565b8054600093929161270561270183610338565b9390565b9160018116908115612756575060011461271e57505050565b6127319192939450600052602060002090565b6000905b8382106127425750500190565b600181602092548486015201910190612735565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001683525050811515909102019150565b61051c61279f92602092612799815190565b94859290565b938491016104a7565b6127b69061029a93926126ee565b90612787565b61284861155861284361029a936127d1606090565b506127de6111d5826122e8565b6127fc6127f76127ef6112206126b6565b92600a6111a1565b6112b8565b9061280660405190565b93849260208401928360028161149d61051c93602096957fffff000000000000000000000000000000000000000000000000000000000000169052565b613eb9565b61029a61285460405190565b809261155860208301916009836127a8565b90610284916128776118098261165b565b9061028491613012565b9061028491612866565b61029a916128a66112a69261289e600090565b506006611230565b611230565b9073ffffffffffffffffffffffffffffffffffffffff906119d5565b906128d761029a6119f692611227565b82546128ab565b906128f3826128ee8360056111a1565b6128c7565b61291661291061290a61290584612343565b611227565b93611227565b91611194565b917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92561294160405190565b600090a4565b6129536111d5836122e8565b61295c82612343565b73ffffffffffffffffffffffffffffffffffffffff811673ffffffffffffffffffffffffffffffffffffffff8316149283156129b3575b50821561299f57505090565b61029a9250906128a66112a6926006611230565b6129c49193506111e19060056111a1565b6129e373ffffffffffffffffffffffffffffffffffffffff8316611837565b149138612993565b919060086119d5910291611c3c73ffffffffffffffffffffffffffffffffffffffff841b90565b9190612a2361029a6119f693611227565b9083546129eb565b919091612a59612a3a83612343565b61185173ffffffffffffffffffffffffffffffffffffffff8416611837565b612a616118be565b9073ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff8516146102475761290a61291091612aa985612abe956128de565b61290586612ab88760046122ad565b90612a12565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef61294160405190565b612afa91612af6916124c2565b1590565b612b0057565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4163636f756e74206973206d697373696e6720726f6c650000000000000000006044820152606490fd5b90815273ffffffffffffffffffffffffffffffffffffffff909116602082015260608101929161028491604090611ede565b612b9e612af683836124c2565b612ba6575050565b81612bdd60016121957f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9560006124de8782611655565b6125fd612be960405190565b928392339184612b5f565b612c019061ffff166117a4565b019061ffff82116116f057565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612c3e916020036008021c90565b8154169055565b919091828210612c5457505050565b6102849291612c699091600052602060002090565b9182019101611c66565b9068010000000000000000811161045f5781612c90610284935490565b90828155612c45565b81519167ffffffffffffffff831161045f57612cd0612cc4600192612cbe8686612c73565b60200190565b92600052602060002090565b92049160005b838110612ce35750505050565b6001906020612d0961029a865173ffffffffffffffffffffffffffffffffffffffff1690565b9401938184015501612cd6565b9061028491612c99565b919091828210612d2f57505050565b610284926010600f909101049060026010612d56600f860182900493600052602060002090565b92830194060260008111612d6d575b500190611c66565b612d7a9060018503612c0e565b38612d65565b9068010000000000000000811161045f5781612d9d610284935490565b90828155612d20565b919060086119d5910291611c3c61ffff841b90565b61167f61029a61029a9261ffff1690565b90612dd5815190565b9067ffffffffffffffff821161045f57612cc4612df691612cbe8486612d80565b601082049160005b838110612e66575060108302900360008111612e1b575b50505050565b9260009360005b818110612e3757505050015538808080612e15565b9091946020612e5c600192612e5161029a8a5161ffff1690565b908560020290612da6565b9601929101612e22565b6000805b60108110612e7f575083820155600101612dfe565b95906020612ea3600192612e9861029a865161ffff1690565b908a60020290612da6565b92019601612e6a565b9061028491612dcc565b9061ffff906119d5565b90612ed061029a6119f692612dbb565b8254612eb6565b9291612ee1825190565b80612ef6612ef061029a855190565b83611851565b600091600190612f096117356001611194565b03612f6c57505050612f666102849394611b08612f3a612f32612f2c6000611194565b876120bb565b5161ffff1690565b945b612f546003956001612f4e86896111a1565b01612d16565b6002612f6084876111a1565b01612eac565b01612ec0565b93959193906001825b612fa7575b505050612f6690611b086102849596612fa2612f9761167f6116f5565b61ffff88161061118d565b612f3c565b94919415612ffb575b612ff2612fde6000927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b92612fec612f32858b6120bb565b90612bf4565b94919082612f75565b6130056000611194565b8111612fb0578194612f7a565b61301c82826124c2565b613024575050565b81612bdd60006121957ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b95826124de8782611655565b61029a631626ba7e610fdd565b3d15613081576130763d611b70565b903d6000602084013e565b606090565b9050519061028482610558565b906020828203126102475761029a91613086565b6000919282916130b5600090565b506130ef6130c161305a565b956130e06130ce60405190565b9485926004602085018b8152016119b3565b6020820181038252038361041f565b602082519201905afa90613101613067565b8261313c575b8261311157505090565b6110a591925061029a61313682602061312b611735955190565b818301019101613093565b93610ff0565b9150613146825190565b6131536117356020611194565b1491613107565b61076361028494611ed7606094989795613179608086019a6000870152565b60ff166020850152565b6040513d6000823e3d90fd5b6020916000916131bc848301519260606040820151910151851a936131b360405190565b9485948561315a565b838052039060015afa156131df57600051908161236261183761057f60006118b5565b613183565b906102849291614159565b3561029a8161081a565b94939291906132239161320e604088016112c2565b421091826133ae575b508161334a575061118d565b61322f602085016112c2565b61323c6117356000611194565b11613248575b50509050565b61325e6132596101408601866112d6565b905090565b8061326c6117356000611194565b11613286575b5061327e929350613ad9565b803880613242565b9084929391613293600090565b5060015b1561331a575b6133126132dc9561330d6133086132f96132f26132e76132e16117c56132c460009a612061565b9d8e6132d6819f6101008101906112d6565b906124e4565b6131ef565b346116dd565b6117da612710611194565b80946120da565b986132d66101408c018c6112d6565b6112cc565b613ad9565b928593613297565b91939092506133296000611194565b82111561333a57929091849261329d565b91905061327e9293508392613272565b60a087019150613359826112cc565b61336961183761057f60006118b5565b1491821561337a575b505038611281565b6133a691925061338c611837916112cc565b9273ffffffffffffffffffffffffffffffffffffffff1690565b143880613372565b6133c69192506112a6612af691612190876002611230565b9038613217565b906102849392916133df838383612a2b565b614231565b610284906133f181614371565b6143a1565b908152606081019392610284929091604091610763906020830152565b907fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff916125fd6134428261165b565b9261345a816001613454866000611655565b01611f22565b604051938493846133f6565b90613475612cc4610b89845490565b9060005b8181106134865750505090565b9091926134b76134b06001926113c4875473ffffffffffffffffffffffffffffffffffffffff1690565b9460010190565b929101613479565b9061029a91613466565b9061028461047e926134da60405190565b938480926134bf565b61029a906134c9565b61029a9060101c61167f565b61029a9060201c61167f565b61029a9060301c61167f565b61029a9060401c61167f565b61029a9060501c61167f565b61029a9060601c61167f565b61029a9060701c61167f565b61029a9060801c61167f565b61029a9060901c61167f565b61029a9060a01c61167f565b61029a9060b01c61167f565b61029a9060c01c61167f565b61029a9060d01c61167f565b61029a9060e01c61167f565b61029a9060f01c61167f565b906135af612cc4610b89845490565b906000915b600f830182116138185754908083106137fb575b8083106137de575b8083106137c1575b8083106137a4575b808310613787575b80831061376a575b80831061374d575b808310613730575b808310613713575b8083106136f6575b8083106136d9575b8083106136bc575b80831061369f575b808310613682575b808310613665575b821061364357505090565b8261365e60019394613656602094613594565b61ffff169052565b0191505090565b919260208161367960019361365686613588565b01930191613638565b91926020816136966001936136568661357c565b01930191613630565b91926020816136b360019361365686613570565b01930191613628565b91926020816136d060019361365686613564565b01930191613620565b91926020816136ed60019361365686613558565b01930191613618565b919260208161370a6001936136568661354c565b01930191613610565b919260208161372760019361365686613540565b01930191613608565b919260208161374460019361365686613534565b01930191613600565b919260208161376160019361365686613528565b019301916135f8565b919260208161377e6001936136568661351c565b019301916135f0565b919260208161379b60019361365686613510565b019301916135e8565b91926020816137b860019361365686613504565b019301916135e0565b91926020816137d5600193613656866134f8565b019301916135d8565b91926020816137f2600193613656866134ec565b019301916135d0565b919260208161380f6001936136568661167a565b019301916135c8565b92835490806138268361167a565b61ffff16905260200180613839836134ec565b61ffff1690526020018061384c836134f8565b61ffff1690526020018061385f83613504565b61ffff1690526020018061387283613510565b61ffff169052602001806138858361351c565b61ffff1690526020018061389883613528565b61ffff169052602001806138ab83613534565b61ffff169052602001806138be83613540565b61ffff169052602001806138d18361354c565b61ffff169052602001806138e483613558565b61ffff169052602001806138f783613564565b61ffff1690526020018061390a83613570565b61ffff1690526020018061391d8361357c565b61ffff1690526020018061393083613588565b61ffff1690526020016139438192613594565b61ffff1690526020019260010191601001916135b4565b9061029a916135a0565b9061028461047e9261397560405190565b9384809261395a565b61029a90613964565b9061149861084183610802565b369037565b906102846139af6139a984613987565b93610802565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00160208401613994565b60609182916003906139f08261263083826111a1565b600090613a08575081611b0e600192610284946111a1565b91819550809450611791613a1c92826111a1565b613a286117a483611690565b03613aac5761028490613aa3613a3e6001611194565b95613a92613a4b88613999565b613a77613a6786611767613a5f859d613999565b96879c6111a1565b91613a7187611194565b906120bb565b9073ffffffffffffffffffffffffffffffffffffffff169052565b613a71613a9d611749565b93611194565b9061ffff169052565b5090916002613ad382613acd6001613ac761029a96896111a1565b016134e3565b956111a1565b0161397e565b600061028492613aec6129058394611227565b90613af660405190565b90818003925af1611281613067565b919067ffffffffffffffff821161045f57613b2482611cf98554610338565b600090601f8311600114613b7c576119f6929160009183613b715750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600883021c1916906002021790565b013590503880611d1b565b90601f19831691613b9285600052602060002090565b92825b818110613be757509160029391856001969410613bb55750505002019055565b01357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff601f84166008021c1916611dc0565b92936020600181928786013581550195019301613b95565b906102849291613b05565b90610284916009613bff565b73ffffffffffffffffffffffffffffffffffffffff821673ffffffffffffffffffffffffffffffffffffffff82161461024757613c91613c8761290a8361290587612195886128a67f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31996006611230565b936102bc60405190565b0390a3565b61029a60a06107ee565b90610284613d326003613cb1613c96565b94613ced613cd3825473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff168752565b613d03613cfc600183016134c9565b6020880152565b613d19613d1260028301613964565b6040880152565b612630613d27838301611686565b61ffff166060880152565b15156080840152565b61029a90613ca0565b613d57613d528260036111a1565b613d3b565b916020830192613d6684515190565b90600094613d7386611194565b8303613dc857505050610284613d896001611194565b93613dc5613d9686613999565b613db7613da38298613999565b91613a77613a6786611767869b60036111a1565b613a71613a9d6117c5611749565b52565b9092949193505190613dd984613999565b94613de48692611194565b855b811015613e2257613e1b81613e15613e0b6117c5612f32613de69660408c01516120bb565b613dc5838c6120bb565b60010190565b9050613de4565b50925092509250565b906102846139af613e3b84611b70565b93610d99565b61123f61029a61029a9290565b90613e57825190565b8110156120d5570160200190565b61123f61029a61029a9260ff1690565b61029a9060f81c613e65565b61029a61029a61029a9260ff1690565b919082018092116116f057565b8115611744570690565b60ff1660ff81146116f05760010190565b90815191600092613ecc61173585611194565b146140cc57613ee3613ede6040611194565b613999565b92613f04613ef082613e41565b613efc612f2c84611194565b9060ff169052565b60018091613f126001613e41565b93613f1c82611194565b935b613f42575b50505050613f38613f3d9161029a93946143bf565b614411565b6144ed565b613f5161029a82979695975190565b8610156140c357613f9b613f96613f91613f6b8985613e4e565b517fff000000000000000000000000000000000000000000000000000000000000001690565b613e75565b613e81565b838089613fa786611194565b915b614034575b50505b613fca575b50613fc48394959660010190565b93613f1e565b613fd78397969597611194565b81111561402b5761402584916117da61401f61400598999a61401a8d613efc61401061400b603a9e8f611194565b89613e9e565b613e41565b91613a7185613e81565b613ea8565b97611194565b90613fb1565b95939495613fb6565b909261403f88613e81565b8410156140bb576140ad6140816140b49261407b61406a613f966140638a896120bb565b5160ff1690565b614075610100611194565b906116dd565b90613e91565b6117da603a6140a861409e61400b61409884611194565b86613e9e565b613efc8a896120bb565b611194565b9360010190565b9082613fa9565b925080613fae565b83949550613f23565b50906140da61029a91611194565b613e2b565b909291926140ef61084182610d99565b9381855281830111610247576102849160208501906104a7565b9080601f8301121561024757815161029a926020016140df565b9190916040818403126102475761413a8382613086565b92602082015167ffffffffffffffff81116102475761029a9201614109565b91614173906020614168825190565b818301019101614123565b9190926141806000611194565b841480156141b9575b610247576141b46001612195866141ad610284986141a888600a6111a1565b611f22565b600b611655565b6146af565b506141c86112a685600b611655565b614189565b905051906102848261024c565b906020828203126102475761029a916141cd565b73ffffffffffffffffffffffffffffffffffffffff91821681529116602082015261029a92608082019290919061422490611ed7565b60608184039101526104ca565b9092833b6142426117356000611194565b14928315614258575b505050610284915061118d565b602092935061426c61290561429b96611227565b90600063150b7a029561427e60405190565b9788958694859361428f8b60e01b90565b855233600486016141ee565b03925af19081156131df57610284926000926142c8575b5061107f6142bf91610fdd565b1438808061424b565b6142bf9192506142f261107f9160203d6020116142fa575b6142ea818361041f565b8101906141da565b9291506142b2565b503d6142e0565b600061028491612c73565b906000036104965761028490614301565b600061028491612d80565b90600003610496576102849061431d565b60008082559060039061434f836001830161430c565b61435c8360028301614328565b0155565b906000036104965761028490614339565b60006143816102849260036111a1565b614360565b9190611c5261029a6119f69390565b61028491600091614386565b610284906143ba60006143b583600a6111a1565b614395565b614718565b91906143ca90613e81565b916143d483613999565b916143df6000611194565b8481101561440a5780613e156143fb61406361440594876120bb565b613efc83886120bb565b6143df565b5092505090565b61441c613ede825190565b906144276000611194565b61443261029a835190565b81101561447f5780613e1561447061406361446a61447a95614465614455895190565b61445f6001611194565b906120da565b6120da565b866120bb565b613efc83876120bb565b614427565b505090565b61448e603a611b70565b7f31323334353637383941424344454647484a4b4c4d4e5051525354555657585960208201527f5a6162636465666768696a6b6d6e6f707172737475767778797a000000000000604082015290565b61029a614484565b61029a6144dd565b906144f96140da835190565b6000926145066000611194565b61451161029a835190565b8110156145585761455390614540613f6b61452a6144e5565b61453a613f9661406386896120bb565b90613e4e565b861a61454c8286613e4e565b5360010190565b614506565b5090925050565b90505190610284826105da565b9092919261457c61084182610802565b938185526020808601920283019281841161024757915b8383106145a05750505050565b602080916145ae848661455f565b815201920191614593565b9080601f8301121561024757815161029a9260200161456c565b905051906102848261081a565b909291926145f061084182610802565b938185526020808601920283019281841161024757915b8383106146145750505050565b6020809161462284866145d3565b815201920191614607565b9080601f8301121561024757815161029a926020016145e0565b9160608383031261024757825167ffffffffffffffff8111610247578261466f9185016145b9565b92602081015167ffffffffffffffff8111610247578361469091830161462d565b92604082015167ffffffffffffffff81116102475761029a9201614109565b906146cc6102849360206146c1825190565b818301019101614647565b93916146d6815190565b6146e36117356000611194565b11614707575b50506147028160006146fc8560036111a1565b016128c7565b614752565b6147119184612ed7565b38806146e9565b6102849061472581614371565b6147fe565b908154916801000000000000000083101561045f5782612ab8916001610284950181556122ad565b919061475e60006118b5565b9273ffffffffffffffffffffffffffffffffffffffff841673ffffffffffffffffffffffffffffffffffffffff82161461024757610284936147a182600461472a565b6147ac6129056118be565b6147b583611227565b6147be85611194565b917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6147e960405190565b600090a4614231565b61028491600091612a12565b614813600061480e8360056111a1565b6147f2565b6148276148218260046122ad565b906147f2565b61482f6118be565b90612abe61291061290a3361122756",
    "sourceMap": "1542:11910:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;1542:11910:9;;;;;:::i;:::-;;:::i;965:18:7:-;;;;;:::i;1542:11910:9:-;;;;;;;;-1:-1:-1;;1542:11910:9;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;1542:11910:9;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1780:7:6;1542:11910:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;1010:20:7:-;;;;;:::i;1542:11910:9:-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;10613:531;10706:25;10721:10;10706:25;:::i;:::-;1542:11910;;;10706:25;:95;;;;;10613:531;10706:175;;;;10613:531;10706:253;;;;10613:531;10706:323;;;;10613:531;10706:394;;;;10699:401;10613:531;:::o;10706:394::-;11075:25;;;;11090:10;11075:25;:::i;:::-;;1542:11910;;;;11075:25;;10613:531;:::o;10706:323::-;11004:25;;;11019:10;11004:25;:::i;:::-;1542:11910;;;11004:25;10706:323;;;:253;10934:25;;;10949:10;10934:25;:::i;:::-;1542:11910;;;10934:25;10706:253;;;:175;10856:25;;;10871:10;10856:25;:::i;:::-;1542:11910;;;10856:25;10706:175;;;:95;10776:25;;;10791:10;10776:25;:::i;:::-;1542:11910;;;10776:25;10706:95;;;1542:11910;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;2688:154:3:-;2811:24;;2688:154;2749:7;1542:11910:9;;;2749:7:3;2776:16;2768:25;2776:16;;;:::i;:::-;2768:25;:::i;:::-;2811:15;:24;:::i;:::-;1542:11910:9;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;2466:216:3:-;;2667:7;2466:216;2574:69;2547:16;;;:::i;:::-;1542:11910:9;;;2582:10:3;:19;:60;;;;;2466:216;2574:69;;:::i;:::-;2667:7;:::i;2582:60::-;2605:37;:25;;;:37;:25;:18;:25;:::i;:::-;2582:10;2605:37;;:::i;:::-;;:::i;:::-;2582:60;;;1542:11910:9;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::o;5844:986:12:-;5993:818;;5844:986;5931:15;1542:11910:9;;;5931:15:12;6057:16;;;;:::i;:::-;6161;6124:653;6161:16;6204:17;6161:16;6204:17;:::i;:::-;6248:14;6124:653;6248:14;;;;;:::i;:::-;6289:16;;;;;;:::i;:::-;6332:14;;;;;;:::i;:::-;6373:13;;;;;:::i;:::-;6413:21;;;;;:::i;:::-;6471:37;;6488:19;;;;;;:::i;:::-;6471:37;;1542:11910:9;;;;6471:37:12;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;6461:48;;;1542:11910:9;;;6461:48:12;;1542:11910:9;;;;6461:48:12;;6563:22;6546:40;;6563:22;;;;;;:::i;6546:40::-;6536:51;;;1542:11910:9;;;6536:51:12;;6641:26;6706:47;;6723:29;6624:44;;6641:26;;;;;;:::i;:::-;6624:44;;1542:11910:9;;;;6624:44:12;;;;;;;;;;:::i;:::-;6614:55;;;1542:11910:9;;;6614:55:12;;6723:29;;;;;;:::i;6706:47::-;6696:58;;;1542:11910:9;;;6696:58:12;;6124:653;;1542:11910:9;;;;6124:653:12;;;;;;;;;;:::i;:::-;6092:704;;;1542:11910:9;;;6092:704:12;;5993:818;;1542:11910:9;;;;5993:818:12;;;;;;;;;;:::i;:::-;5969:853;;;1542:11910:9;;;5969:853:12;;5844:986;:::o;3143:230:3:-;;3358:7;3143:230;;3279:48;3287:39;3306:10;;3287:39;:::i;3279:48::-;3358:7;:::i;1542:11910:9:-;;;;4880:112:0;4963:22;:12;:22;4880:112;4937:7;1542:11910:9;;;4937:7:0;4963:12;:6;:12;:::i;:::-;:22;;:::i;1542:11910:9:-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;1638:45:11:-;1677:6;;;:::i;:::-;;;;;;;;;;;;;1542:11910:9;1677:6:11;;1542:11910:9;;1677:6:11;;;;;;;;:::o;:::-;;:::i;1689:51::-;1736:4;;;:::i;2969:410::-;;;3103:12;:29;;:22;;;;:::i;:::-;:29;1542:11910:9;;;;;3103:29:11;3147:22;:31;:22;;;;;:::i;:::-;:31;;:::i;:::-;:36;;3182:1;3147:36;:::i;:::-;;1542:11910:9;;;;3147:36:11;;3143:230;;3215:19;;:28;:43;:19;:28;:19;;:::i;:::-;:28;:::i;:::-;;:::i;:::-;:43;3246:12;;:::i;3215:43::-;;;:::i;3143:230::-;3306:22;:40;:31;:22;;:55;:22;:40;:22;;:::i;3933:88:0:-;;4013:1;3933:88;3992:10;5310:18;;;:::i;:::-;3992:10;;;:::i;:::-;5242:130;5357:7;5242:130;5357:7;:::i;5242:130::-;;;;;:::i;1313:167:6:-;1416:34;;1424:25;;1434:15;;;:::i;1424:25::-;;1542:11910:9;;;;1424:25:6;;1416:34;:::i;8038:296:9:-;;8308:18;8038:296;;8207:52;8215:29;;:22;;:12;:22;:::i;:29::-;:43;8248:10;8215:43;1542:11910;8207:52;8308:18;:::i;6229:214:0:-;6428:7;;6229:214;6301:30;6320:10;1542:11910:9;;;6309:21:0;1542:11910:9;6301:30:0;6428:7;:::i;1542:11910:9:-;;;;;;;;;;;:::i;1641:51:3:-;1682:10;1690:1;1682:10;:::i;2165:105:9:-;2204:66;;;:::i;:::-;;;;;;:::i;:::-;1542:11910;;;;;;;;2204:66;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;1542:11910;;;;;;;;2204:66;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;1542:11910;;;;;;2204:66;1542:11910;;;2204:66;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;1542:11910;;;;2204:66;;;;:::i;:::-;;;:::o;4789:1646::-;;6338:42;4789:1646;6390:21;4789:1646;6390:38;4789:1646;6424:4;4789:1646;6390:12;4789:1646;4992:36;5000:14;;;;;:::i;:::-;5018:9;;5000:27;1542:11910;4992:36;5331:7;1542:11910;5372:28;;;;;;:::i;:::-;5411:14;5440:23;;;;;;:::i;:::-;:39;;5467:12;;:::i;5440:39::-;;5436:320;;5504:26;;5552:28;5504:26;;;;6317:9;5504:26;6338:42;5504:26;;;;:::i;:::-;;;:::i;:::-;5495:35;5544:37;5495:35;5560:11;;;;;:::i;:::-;5552:28;:::i;5544:37::-;6162:94;;;6192:63;6173:17;;;:::i;:::-;6192:63;6203:26;;;;;;:::i;:::-;6231:19;;;;;;;:::i;:::-;1542:11910;;6192:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;1542:11910;;6162:94;;;;;;;;;:::i;:::-;;;;:::i;:::-;5018:9;6317;;:::i;:::-;6338:42;:::i;:::-;;;:::i;:::-;6390:21;;:::i;:::-;:31;:38;:::i;5436:320::-;5621:23;;;5658:87;6338:42;5621:23;;;;;6317:9;5621:23;;:::i;:::-;5612:32;5674:11;;;5666:28;5674:11;;;:::i;5666:28::-;:78;;;;5436:320;5658:87;;;;;:::i;:::-;5436:320;;5666:78;5698:46;;;;;;;:::i;:::-;;;:::i;:::-;5666:78;;;;;;1542:11910;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;3379:134:3:-;;;3467:39;3379:134;3467:39;;:::i;:::-;;;:::i;1054:132:5:-;1170:8;1054:132;1105:49;1113:40;1132:10;;1113:40;:::i;1105:49::-;1170:8;:::i;1542:11910:9:-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3481:51:0:-;3528:4;;;:::i;2305:106:9:-;2345:66;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;1542:11910;;;;;;;2345:66;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;1542:11910;;;;2345:66;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1542:11910;;2345:66;;;;1542:11910;;2345:66;;;;1542:11910;;2345:66;;;1542:11910;;;;;2345:66;;;;;1682:10:3;2345:66:9;;;;;;1542:11910;;2345:66;;;;:::i;11629:1749::-;11758:71;;11785:44;11758:71;11629:1749;12004:12;11629:1749;11690:31;11698:22;11712:8;1542:11910;;;;11698:22;:10;:22;1542:11910;11690:31;11785:44;;;;:::i;:::-;11758:71;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;11871:8;11851:18;;;:::i;:::-;11871:8;:::i;:::-;11901:12;;:::i;:::-;11915:8;;;;;:::i;:::-;11958;11945:11;;:::i;:::-;11958:8;;;:::i;:::-;12004:12;:::i;:::-;13120:251;13190:15;13162:199;13223:22;13239:4;13223:22;:::i;:::-;;;;1542:11910;;;13223:22;;13321:4;13313:13;13321:4;13313:13;:::i;:::-;13162:199;;;1542:11910;;;;13162:199;;;;;;;13271:13;;13162:199;;;:::i;:::-;13139:232;;;1542:11910;;;13139:232;;13120:251;;:::i;1542:11910::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;1682:10:3;1542:11910:9;;;;;;;;;;;;;;:::i;6546:1284::-;;;;;;;6820:26;;6546:1284;6765:28;;;:::i;:::-;6820:26;;:::i;:::-;;;:::i;:::-;6879:14;;;;;;:::i;:::-;6923:1;6856:37;6908:16;6923:1;6908:16;:::i;:::-;;;6904:596;;6546:1284;7711:12;;;7795:13;7711:12;7735:49;7795:28;7711:12;;7762:14;;7711:12;;7735:49;7711:12;;7819:4;7711:12;;7795:21;7711:12;;;;;:::i;:::-;7762:14;;:::i;:::-;7735:49;;:::i;:::-;;;;:::i;:::-;7795:5;:13;:::i;:::-;:21;:::i;:::-;:28;:::i;6904:596::-;6940:34;;6964:9;;6948:25;1542:11910;6940:34;7056:33;7074:14;;;;;:::i;:::-;7056:33;:::i;:::-;7116:24;;;1542:11910;;;7116:24;7104:36;;7158:5;;;;:::i;:::-;;7154:336;;6904:596;;;;;7154:336;7183:21;;;;;;;;;;;;;;;1542:11910;;;7183:21;7222:254;;;;;;;7469:5;7247:3;;;;:::i;:::-;;;;7301:13;7247:3;;7301:13;:::i;:::-;1542:11910;;;7289:25;;;:::i;:::-;;;6964:9;7289:25;:::i;:::-;7288:36;7318:6;7288:36;:::i;:::-;;;;:::i;:::-;7272:52;;7346:29;;;:::i;:::-;7397:20;;;;;:::i;:::-;1542:11910;;;7428:13;;;;:::i;:::-;7222:254;;;;;;7469:5;;;:::i;:::-;;;7222:254;7469:5;;;-1:-1:-1;7469:5:9;;-1:-1:-1;7469:5:9;;-1:-1:-1;7469:5:9;;;;-1:-1:-1;7154:336:9;;7469:5;;7154:336;7735:49;7795:28;7154:336;;1542:11910;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;10039:110::-;10114:12;;10039:110;10091:4;1542:11910;;;10091:4;10114:12;:7;:12;:::i;:::-;;;:::i;:::-;:28;;10130:12;;:::i;10114:28::-;;;10039:110;:::o;2051:134:6:-;2131:24;2139:15;;;:::i;8542:151:9:-;;8677:8;8542:151;8607:48;8615:39;8623:18;;:::i;:::-;8643:10;8615:39;;:::i;8607:48::-;8677:8;:::i;2301:159:3:-;2391:16;;2301:159;2356:14;1542:11910:9;;;2391:16:3;2382:25;;2421:22;;2431:12;;:::i;2421:22::-;;2417:36;;2301:159::o;1542:11910:9:-;;;;;;;;;:::o;9381:320:3:-;1542:11910:9;9439:7:3;9462:22;9472:12;;:::i;9462:22::-;1542:11910:9;;;9462:22:3;9458:36;;9504:17;9520:1;9504:17;:::i;:::-;9553:7;;:14;;:7;1542:11910:9;;;9553:14:3;9582:9;9610:3;9593:15;;;;;;;9633:20;9643:10;;;;;:::i;9633:20::-;1542:11910:9;;;9633:20:3;9629:33;;9610:3;9593:15;;1542:11910:9;;9610:3:3;9582:9;;;;9629:33;9655:7;9610:3;9655:7;9593:15;9655:7;;:::i;:::-;9629:33;;;;;;9593:15;;;;;;;9381:320;:::o;1542:11910:9:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;3385:238:11;3589:27;;3507:51;3515:10;:22;:26;;3540:1;3515:26;:::i;:::-;;3507:51;:::i;4108:128:0:-;4200:29;4108:128;4200:6;:12;:29;4108:128;4177:4;1542:11910:9;;;4177:4:0;4200:12;;;:::i;:::-;:20;:29;:::i;1542:11910:9:-;;;;;;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;3759:266:12:-;;;3868:100;;;;;;;3886:3;3961:5;3886:3;;:::i;:::-;;3904:37;3937:4;3904:30;3886:3;3922:11;;3904:17;3910:10;3904:5;:17;:::i;:::-;3922:11;;;;:::i;:::-;;:::i;:::-;3904:30;;:::i;:37::-;3868:100;;;3961:5;3965:1;3961:5;:::i;:::-;;;3868:100;3961:5;;;3983:34;3961:5;3983:34;;1542:11910:9;;;;3983:34:12;3996:10;;;;3983:34;;:::i;:::-;;;;3759:266::o;1542:11910:9:-;;;;;;;;;;;;:::i;7130:130:11:-;7221:12;:22;:32;7130:130;7198:4;1542:11910:9;;;7198:4:11;7221:22;;;:::i;:::-;:32;;:::i;2848:136:3:-;;2968:8;2848:136;2946:10;2968:8;:::i;3933:88:0:-;;4013:1;3933:88;3992:10;4156:11:9;;:::i;3992:10:0:-;4091:128:9;4206:5;4091:128;4190:14;:7;1542:11910;;;4190:14;4206:5;;:::i;4091:128::-;;;;;:::i;3579:217:3:-;;3783:5;3579:217;;;3688:49;3696:40;3715:10;;3696:40;:::i;3688:49::-;3783:5;:::i;3629:210:11:-;3741:28;;:21;;:12;:21;:::i;:28::-;:42;;3773:10;3781:1;3773:10;:::i;3741:42::-;;3737:56;;3810:22;;;:::i;1542:11910:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1542:11910:9;;;;;;;;-1:-1:-1;1542:11910:9:o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::i;1987:908:7:-;2293:571;:53;;2113:775;1987:908;2045:13;1542:11910:9;;;2045:13:7;2078:16;2070:25;2078:16;;;:::i;2070:25::-;2326:19;;2310:14;2317:6;2310:14;:::i;:::-;2326:19;:10;:19;:::i;:::-;;:::i;:::-;2293:53;;1542:11910:9;;;;2293:53:7;;;;;;;;;1542:11910:9;;;;;;;;;;;;;2293:53:7;:571;:::i;:::-;2228:650;;1542:11910:9;;;;2228:650:7;;;;;;;;2262:13;2228:650;;:::i;3933:88:0:-;;4013:1;3933:88;3992:10;5675:18;;;:::i;3992:10::-;5606:132;5723:7;5606:132;5723:7;:::i;5606:132::-;;;;;:::i;2990:147:3:-;3095:35;2990:147;3095:25;:35;2990:147;3072:4;1542:11910:9;;;3072:4:3;3095:25;:18;:25;:::i;:::-;:35;:::i;1542:11910:9:-;;;;;1682:10:3;1542:11910:9;;;;;;;:::i;:::-;;;;:::i;7845:159:3:-;;7911:30;:25;;;:15;:25;:::i;:::-;:30;:::i;:::-;7956:41;;;7965:17;;;:::i;:::-;7956:41;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;1542:11910:9;;;;7956:41:3;;;;7845:159::o;6105:287::-;6206:25;6214:16;;;:::i;6206:25::-;6257:16;;;:::i;:::-;1542:11910:9;;;;;;6291:16:3;:55;;;;;6105:287;6291:93;;;;;6283:102;;6105:287;:::o;6291:93::-;6350:34;:25;;;;:34;:25;:18;:25;:::i;6291:55::-;6311:24;;;;;;:15;:24;:::i;:::-;:35;1542:11910:9;;;6311:35:3;1542:11910:9;6311:35:3;;6291:55;;;;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;7391:343:3:-;;;;7474:35;7482:17;;;:::i;:::-;:26;1542:11910:9;;;7482:26:3;1542:11910:9;7474:35:3;7530:12;;:::i;:::-;7523:19;1542:11910:9;;;;;;7523:19:3;7519:33;;7697:30;;7638:8;;;7697:30;7638:8;;:::i;:::-;7658:23;:17;;;:7;:17;:::i;:::-;:23;;:::i;7697:30::-;;;;1542:11910:9;;;;4531:168:0;4610:23;4531:168;4611:22;4531:168;4611:22;:::i;:::-;4610:23;;1542:11910:9;4610:23:0;4606:87;;4531:168::o;4606:87::-;1542:11910:9;;4649:33:0;;;1542:11910:9;4649:33:0;;;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6929:223:0;7003:23;7004:22;;;;:::i;7003:23::-;6999:147;;6929:223;;:::o;6999:147::-;7042:12;:36;7074:4;7042:29;7097:38;7042:12;:6;:12;;;;:::i;:36::-;7097:38;;1542:11910:9;;;;7097:38:0;7124:10;;;;7097:38;;;:::i;1542:11910:9:-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;1682:10:3;1542:11910:9;;;;;;;:::i;:::-;;;;:::i;5977:1040:11:-;;;6167:18;;1542:11910:9;;;6167:18:11;6147:38;6195:47;6203:38;6216:25;;1542:11910:9;;;6203:38:11;;;1542:11910:9;6195:47:11;1542:11910:9;6543:1:11;;6530:14;;;6543:1;6530:14;:::i;:::-;;6526:318;;6571:14;;;6968:22;:42;6571:14;;6918:40;6571:14;;;6583:1;6571:14;:::i;:::-;;;:::i;:::-;1542:11910:9;;;;;6571:14:11;6526:318;;6854:54;:12;:22;6543:1;6854:22;;;;:::i;:::-;:33;:54;:::i;:::-;6918:26;:22;;;;:::i;:::-;:26;:40;:::i;6968:22::-;:31;:42;:::i;6526:318::-;6616:172;;;;;6543:1;6616:172;;;;;6820:12;;;6968:22;6820:12;6918:40;6968:42;6820:12;;6801:32;6809:23;6820:12;;:::i;6809:23::-;1542:11910:9;;;6809:23:11;6801:32;:::i;:::-;6526:318;;6616:172;;;;;;;;6716:34;6669:11;6773:13;6669:11;1542:11910:9;;;;6669:11:11;;6728:22;;6669:11;6728:22;;:::i;:::-;6716:34;;:::i;:::-;6616:172;;;;;;;6773:13;6785:1;6773:13;:::i;:::-;;;6616:172;6773:13;;;;;7277:224:0;7352:22;;;;:::i;:::-;7348:147;;7277:224;;:::o;7348:147::-;7390:12;:37;7422:5;7390:29;7446:38;7390:12;;;;;;:::i;1131:48:15:-;1169:10;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;1542:11910:9;;:::o;1169:10:15:-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;2039:345::-;2200:70;2039:345;;;;2145:4;1542:11910:9;;;2145:4:15;2241:10;2218:51;2241:10;;:::i;:::-;2218:51;;;1542:11910:9;;;;2218:51:15;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;2200:70;;;;;;;;;;;:::i;:::-;2289:30;;;2039:345;2289:86;;;2281:95;;2039:345;:::o;2289:86::-;2323:52;:29;;;2356:19;2323:29;;;;:52;:29;1542:11910:9;;;2323:29:15;;;;;;;;:::i;:::-;2356:19;;:::i;2289:30::-;2300:13;;;;1542:11910:9;;;2300:13:15;:19;;2317:2;2300:19;:::i;:::-;;2289:30;;;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;945:596:14;1462:27;;;;;1275:167;;;;;;;;;;;;;;;1462:27;;1542:11910:9;;;;1462:27:14;;;;;;:::i;:::-;;;;;;;;;;;;;;1452:37;;1503:21;;1514:10;1522:1;1514:10;:::i;1462:27::-;;:::i;9064:219:9:-;;9270:5;9064:219;;9270:5;:::i;1542:11910::-;;;;;:::i;4033:1803:12:-;;;;;;4245:507;4033:1803;4332:16;;;;;:::i;:::-;4351:15;-1:-1:-1;4332:130:12;;;;4033:1803;4332:409;;;;4245:507;;:::i;:::-;4769:14;;;;;:::i;:::-;:18;;4786:1;4769:18;:::i;:::-;;4765:1064;;4033:1803;;;;;:::o;4765:1064::-;5337:36;:29;;;;;;:::i;:::-;:36;1542:11910:9;;;5337:36:12;5325:48;5392:5;;4786:1;5392:5;:::i;:::-;;5388:381;;4765:1064;5803:13;;;;;;:::i;:::-;4765:1064;;;;;5388:381;5418:24;;;;;;1542:11910:9;;;5418:24:12;5461:293;;;;;;;5702:16;5545:25;5747:5;5659:32;;5603:33;5532:48;5533:37;;5545:25;5487:3;4786:1;5487:3;;:::i;:::-;;;5545:22;5487:3;5545:22;;;;;;:::i;:::-;:25;;:::i;:::-;;:::i;5533:37::-;:9;:37;:::i;:::-;5532:48;5574:6;5532:48;:::i;:::-;5513:67;;5603:33;:::i;:::-;5337:29;5659;5337;;;5659;;:::i;:32::-;;:::i;:::-;5702:16;:::i;:::-;5461:293;;;;;;5747:5;;;;;;4786:1;5747:5;:::i;:::-;;;;;;5461:293;;;;;;;5747:5;;;;5803:13;5747:5;;;5388:381;;;;4332:409;4673:21;;;;-1:-1:-1;4673:21:12;;;:::i;:::-;:35;;4698:10;4706:1;4698:10;:::i;4673:35::-;;:67;;;;;4332:409;;;;;;4673:67;4712:28;:21;;;;:28;:21;;:::i;:::-;:28;1542:11910:9;;;;4712:28:12;;4673:67;;;;4332:130;4438:24;4439:14;;;:23;;:14;;;:5;:14;:::i;4438:24::-;4332:130;;;;4707:209:3;;4903:5;4707:209;;;4837:8;;;;;:::i;:::-;4903:5;:::i;9471:172:9:-;9627:8;9471:172;9596:8;;;:::i;:::-;9627;:::i;1542:11910::-;;;;;;;;;;;;;;;;;;;;;;6568:239:0;;6748:52;6568:239;6748:52;6671:18;;;:::i;:::-;6699:12;:34;:12;:22;:12;;:6;:12;:::i;:::-;:22;:34;:::i;:::-;1542:11910:9;;6748:52:0;;;;;:::i;1542:11910:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;3845:657:11:-;1542:11910:9;3908:27:11;;3972:12;;:22;:32;:22;;;;;:::i;:32::-;4008:5;;3968:528;;4029:22;;;4064:4;4029:22;:39;:22;;:::i;3968:528::-;4103:22;;;;;;;;:31;:22;;;:::i;:31::-;:36;;;;:::i;:::-;;4099:387;;4308:28;4172:16;4308:28;4172:16;4186:1;4172:16;:::i;:::-;;4245:45;4172:16;;;:::i;:::-;4245:45;4261:29;4159;4261:22;4212:15;4159:29;4212:15;;:::i;:::-;4206:21;;4261:22;;:::i;:29::-;4245:45;;;;:::i;:::-;;;:::i;:::-;1542:11910:9;;;;;;4245:45:11;4308:28;4317:19;;:::i;:::-;4308:28;;:::i;:::-;1542:11910:9;;;;;;4099:387:11;4388:22;;;4445:26;:22;4388;4375:46;4388:33;:22;4439:32;4388:22;;;:::i;:::-;:33;4375:46;:::i;:::-;4445:22;;:::i;:::-;:26;4439:32;:::i;1727:170:13:-;1819:45;1874:16;1727:170;1819:23;:18;1727:170;;1819:18;:::i;:23::-;:45;;1542:11910:9;;;;1819:45:13;;;;;;;;;;:::i;1542:11910:9:-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1542:11910:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4315:97:7:-;;4381:24;4315:97;4381:24;;:::i;8139:255:3:-;1542:11910:9;;;;;;8240:19:3;8236:33;;8343:44;;;8279:26;:49;:26;:37;:26;;8343:44;8279:26;:18;:26;:::i;8343:44::-;;;1542:11910:9;;;;8343:44:3;;;;8139:255::o;1542:11910:9:-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;4508:841:11:-;4706:59;4744:21;;:12;:21;:::i;:::-;4706:59;:::i;:::-;4798:27;;;;;:34;:27;;1542:11910:9;;;4798:34:11;4863:1;;4847:17;;;;:::i;:::-;;;4843:500;;4901:16;;;5034:38;4901:16;4915:1;4901:16;:::i;:::-;;5034:38;4901:16;;;:::i;:::-;4968:52;4938:16;4880:37;4938:16;;:::i;:::-;4931:23;4968:52;4992:28;4931:23;4992:21;4931:23;4992:21;4744:12;4992:21;:::i;4968:52::-;5034:38;5044:28;5052:19;;:::i;5034:38::-;1542:11910:9;;4843:500:11;5124:27;;;;;;;5173;;;;:::i;:::-;5166:34;5220:13;5166:34;5220:13;;:::i;:::-;5235:16;;;;;;;5253:3;5294:20;5276:42;5286:32;5294:23;;5235:16;5294:20;;;;;:23;:::i;5286:32::-;5276:42;;;;:::i;:::-;1542:11910:9;;;;5253:3:11;5220:13;;;;5235:16;;;;;;;;4508:841::o;1542:11910:9:-;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;:::o;973:791:10:-;;1542:11910:9;;1080:1:10;;1063:18;;;;;:::i;:::-;;1059:43;;1136:15;;1148:2;1136:15;:::i;:::-;;:::i;:::-;1161:13;;;;;:::i;:::-;;;;;:::i;:::-;1542:11910:9;;;;;;1161:13:10;1204:1;1184:21;;;1204:1;1184:21;:::i;:::-;1220:13;;;;:::i;:::-;1215:476;1220:13;;;1215:476;1726:29;;;;;1718:38;1726:29;1707:50;1726:29;;;:::i;:::-;1718:38;:::i;:::-;1707:50;:::i;1254:3::-;1235:17;1239:13;;;;;;1542:11910:9;;;1235:17:10;;;;;;1273:32;1289:16;1295:9;;;;;:::i;:::-;1542:11910:9;;;;;1295:9:10;1289:16;:::i;:::-;1273:32;:::i;:::-;1324:13;;;;;;:::i;:::-;1319:191;1324:13;;;1319:191;1524:157;;;;;;1254:3;;;;;;1542:11910:9;;;;1254:3:10;1220:13;;;1524:157;1531:9;;;;;;;:::i;:::-;;;;;;1656:10;1596:2;;1656:10;1617:13;1588:10;1596:2;;;1560:39;1596:2;1560:39;1582:17;1588:10;1596:2;1588:10;;;:::i;:::-;;;:::i;:::-;1582:17;:::i;:::-;1560:39;;;;:::i;:::-;1617:13;:::i;:::-;1656:10;;:::i;:::-;1524:157;;;1531:9;;;;;;;1356:3;1339:15;;;;;:::i;:::-;;;;;;1485:10;1379:33;1356:3;1396:9;1388:24;:18;1396:9;;;;;:::i;:::-;1542:11910:9;;;;;1388:18:10;:24;1409:3;1388:24;:::i;:::-;;;:::i;:::-;1379:33;;:::i;:::-;1485:10;1456:2;1430:29;1442:17;1448:10;;;;:::i;:::-;;;:::i;1442:17::-;1430:29;;;;:::i;:::-;1485:10;:::i;:::-;1356:3;1542:11910:9;;;;1356:3:10;1324:13;;;;1339:15;;;;;;1235:17;;;;;;;1059:43;1090:12;;;;;;:::i;:::-;;:::i;1542:11910:9:-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;2901:1238:7:-;;3053:35;2901:1238;3053:35;;;1542:11910:9;;;3053:35:7;;;;;;;;:::i;:::-;3648:16;;;;3661:3;3648:16;:::i;:::-;;;:42;;;;2901:1238;3644:56;;4051:29;4076:4;4051:22;4009:20;:32;4118:13;4009:20;;;:10;:20;:::i;:::-;:32;:::i;:::-;4051:11;:22;:::i;:29::-;4118:13;:::i;3648:42::-;3668:22;;;;:11;:22;:::i;:::-;3648:42;;1542:11910:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;8883:331:3:-;;;9022:15;;:20;;9041:1;9022:20;:::i;:::-;;:127;;;;;8883:331;9001:206;;;;;;;:::i;9022:127::-;9062:73;:20;;;:37;:20;:73;:20;;:::i;:37::-;;9041:1;9062:37;:73;;1542:11910:9;;;;9062:73:3;;;;;;;;;;1542:11910:9;;;;9062:73:3;;;9100:10;9062:73;;;;:::i;:::-;;;;;;;;;;9001:206;9062:73;9041:1;9062:73;;;9022:127;9062:87;;;;;:::i;:::-;;9022:127;;;;;9062:73;:87;:73;;;;:87;:73;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;1542:11910:9;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;:::i;7023:101:11:-;7088:29;7095:22;7088:29;7023:101;7095:12;:22;:::i;:::-;7088:29;:::i;1542:11910:9:-;;;;;;;;;;;;;;;:::i;4466:135:7:-;4585:8;4466:135;4535:27;;4542:20;;:10;:20;:::i;:::-;4535:27;:::i;:::-;4585:8;:::i;2054:266:10:-;;;2180:19;;;:::i;:::-;;;;;:::i;:::-;2214:13;;2226:1;2214:13;:::i;:::-;2229:10;;;;;;2272:8;2260:20;2272:8;;2241:3;2272:8;;;:::i;:::-;2260:20;;;;:::i;2241:3::-;2214:13;;2229:10;;;;;2054:266;:::o;2326:282::-;2437:25;2449:12;;1542:11910:9;;;2437:25:10;2477:13;;2489:1;2477:13;:::i;:::-;2492:16;2496:12;;1542:11910:9;;;2492:16:10;;;;;;2547:12;2529:39;2541:27;;2547:20;2510:3;2547:12;:16;:12;;1542:11910:9;;;2547:12:10;:16;2562:1;2547:16;:::i;:::-;;;:::i;:::-;:20;:::i;:::-;2541:27;;:::i;:::-;2529:39;;;;:::i;2510:3::-;2477:13;;2492:16;;;2326:282;:::o;1542:11910:9:-;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;:::i;821:86:10:-;847:60;;:::i;1770:278::-;;1882:25;1892:14;;1542:11910:9;;;1882:25:10;1934:1;1922:13;;1934:1;1922:13;:::i;:::-;1937:18;1941:14;;1542:11910:9;;;1937:18:10;;;;;;1957:3;1988:8;:20;;:8;;:::i;:::-;:20;1997:10;;;;;:::i;1988:20::-;;;:::i;:::-;1976:32;;;;;;:::i;:::-;;1542:11910:9;;;;1957:3:10;1922:13;;1937:18;-1:-1:-1;1937:18:10;;-1:-1:-1;;1770:278:10:o;1542:11910:9:-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;1613:962:8:-;;1813:47;2563:4;1613:962;1813:47;;;1542:11910:9;;;1813:47:8;;;;;;;;:::i;:::-;2013:24;;;;1542:11910:9;;;2013:24:8;:28;;2040:1;2013:28;:::i;:::-;;2009:115;;1613:962;2490:22;;:35;:22;2040:1;2490:22;;:12;:22;:::i;:::-;:29;:35;:::i;:::-;2563:4;:::i;2009:115::-;2095:17;;;;:::i;:::-;2009:115;;;;1472:135;1591:8;1472:135;1560:8;;;:::i;:::-;1591;:::i;1542:11910:9:-;;;;;;;;;;;;;;;;;;;;;:::i;6779:281:3:-;;;6883:10;6891:1;6883:10;:::i;:::-;6876:17;1542:11910:9;;;;;;6876:17:3;6872:31;;7047:5;;6914:17;:12;:7;:17;:::i;:::-;6947:37;6956:12;;:::i;6947:37::-;;;;:::i;:::-;;;;:::i;:::-;;;;1542:11910:9;;;;6947:37:3;;;;7047:5;:::i;1542:11910:9:-;;;;;;:::i;5226:292:3:-;5313:32;;5320:25;;:15;:25;:::i;:::-;5313:32;:::i;:::-;5356:24;5363:17;;:7;:17;:::i;:::-;5356:24;;:::i;:::-;5488:12;;:::i;:::-;5476:10;5467:44;;;5476:10;5467:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "1451": [
        {
          "start": 8016,
          "length": 32
        }
      ],
      "2687": [
        {
          "start": 8175,
          "length": 32
        }
      ],
      "2689": [
        {
          "start": 5315,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "exists(uint256)": "4f558e79",
    "getApproved(uint256)": "081812fc",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getRoyalties(uint256)": "bb3bafd6",
    "getTypedDataDigest((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]))": "1177dcdc",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(bytes)": "439fab91",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isSecondaryMarket(uint256)": "990d2fd1",
    "lazyBuy((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]),bytes,bytes,address)": "43b8736c",
    "lazyMint((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]),bytes,bytes,address)": "422b0d25",
    "mint(address,bytes)": "b510391f",
    "name()": "06fdde03",
    "ninfaRoyaltyInfo(uint256)": "8c3f41b8",
    "ownerOf(uint256)": "6352211e",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "royaltyInfo(uint256,uint256)": "2a55205a",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setBaseURI(string)": "55f804b3",
    "setRoyaltyInfo(uint256,uint16[],address[])": "2f8983d3",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenByIndex(uint256)": "4f6ccce7",
    "tokenOfOwnerByIndex(address,uint256)": "2f745c59",
    "tokenURI(uint256)": "c87b56dd",
    "totalSupply()": "18160ddd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "voidVouchers(bytes32[])": "92cb4208"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"digests\",\"type\":\"bytes32[]\"}],\"name\":\"VoidVouchers\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getRoyalties\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tokenURI\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ERC1271Account\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"royaltyBps\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16[]\",\"name\":\"commissionBps\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"royaltyRecipients\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"commissionRecipients\",\"type\":\"address[]\"}],\"internalType\":\"struct EncodeType.Voucher\",\"name\":\"_voucher\",\"type\":\"tuple\"}],\"name\":\"getTypedDataDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isSecondaryMarket\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tokenURI\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ERC1271Account\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"royaltyBps\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16[]\",\"name\":\"commissionBps\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"royaltyRecipients\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"commissionRecipients\",\"type\":\"address[]\"}],\"internalType\":\"struct EncodeType.Voucher\",\"name\":\"_voucher\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"lazyBuy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"tokenURI\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"buyerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ERC1271Account\",\"type\":\"address\"},{\"internalType\":\"uint16[]\",\"name\":\"royaltyBps\",\"type\":\"uint16[]\"},{\"internalType\":\"uint16[]\",\"name\":\"commissionBps\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"royaltyRecipients\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"commissionRecipients\",\"type\":\"address[]\"}],\"internalType\":\"struct EncodeType.Voucher\",\"name\":\"_voucher\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"lazyMint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ninfaRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"bps\",\"type\":\"uint16[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint16[]\",\"name\":\"_royaltyBps\",\"type\":\"uint16[]\"},{\"internalType\":\"address[]\",\"name\":\"_royaltyRecipients\",\"type\":\"address[]\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_digests\",\"type\":\"bytes32[]\"}],\"name\":\"voidVouchers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"tech@ninfa.io                    *\",\"details\":\"{ERC721} token                                       *                                                           *\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address)\":{\"details\":\"WARNING this function SHOULD only be called by frontends due to unbound looppublic visibility as it is needed by\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"exists(uint256)\":{\"details\":\"same function interface as erc1155, so that external contracts, i.e. the marketplace, can check either erc without requiring an if/else statement\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(bytes)\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE` and `MINTER_ROLE` to the account that deploys the contract.      `MINTER_ROLE` is needed in case the deployer may want to use or allow other accounts to mint on their self-sovereign collection\"},\"lazyBuy((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]),bytes,bytes,address)\":{\"params\":{\"_voucher\":\".value in this case is not the price of the token, but the tokenId\"}},\"lazyMint((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]),bytes,bytes,address)\":{\"params\":{\"_data\":\"_data bytes are passed to `onErc1155Received` function if the `_to` address is a contract, for example a marketplace.      `onErc1155Received` is not being called on the minter's address when a new tokenId is minted however, even if it was contract.\",\"_to\":\"buyer, needed if using a external payment gateway, so that the minted tokenId value is sent to the address specified insead of `msg.sender`\",\"_voucher\":\"voucher struct containing the tokenId metadata.\"}},\"mint(address,bytes)\":{\"details\":\"_tokenURI Replaces deprecated Openzeppelin contracts v4.0 `ERC721Metadata_URI` extension      See https://forum.openzeppelin.com/t/why-doesnt-openzeppelin-erc721-contain-settokenuri/6373 and https://forum.openzeppelin.com/t/function-settokenuri-in-erc721-is-gone-with-pragma-0-8-0/5978/2when minted for the first time, royalty recipient MUST be set to msg.sender, i.e. minter/artist;      royalty receipient cannot and SHOULD not be set to an address different than the minter's such as a payment splitter or else `setRoyaltyRecipient` function will revert when called (unless receiver )\",\"params\":{\"_data\":\"bytes should be in the following format/order: `abi.encodePacked(bytes32 _tokenURI, address [] memory _royaltyRecipients, uint16[] memory _royaltyBps`\",\"_to\":\"is not only the recipient, but also it is set as the address that will be used for access control when calling the `setRoyaltyInfo` function. Hence `_to` MUST be an address controlled by the artist/minter in order to prevent unauthorized changes to the royalty info.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. `supportsInterface()` was first implemented by all contracts and later all implementations removed, hardcoding interface IDs in order to save some gas and simplify the code.\"},\"tokenByIndex(uint256)\":{\"details\":\"Throws if `_index` >= `totalSupply()`.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`\"},\"returns\":{\"_0\":\"The token identifier for the `_index`th NFT,  (sort order not specified)\"}},\"totalSupply()\":{\"returns\":{\"_0\":\"A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address\"}}},\"stateVariables\":{\"MINTER_ROLE\":{\"details\":\"`MINTER_ROLE` is needed in case the deployer may want to use or allow other accounts to mint on their self-sovereign collection\"},\"_FACTORY\":{\"details\":\"constant set at deployment of master contract, replaces `initializer` modifier reducing the cost of calling `initialize` from the factory contract when a new clone is deployed.\"}},\"title\":\"ERC721Sovereign                                     *                                                           *\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"tokenByIndex(uint256)\":{\"notice\":\"Enumerate valid NFTs\"},\"totalSupply()\":{\"notice\":\"Count NFTs tracked by this contract\"}},\"notice\":\"Self-sovereign ERC-721 minter preset               *                                                           *\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/ERC721/presets/ERC721Sovereign.sol\":\"ERC721Sovereign\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":4194304},\"remappings\":[\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=contracts/\",\":test/=test/\"],\"viaIR\":true},\"sources\":{\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0xcaf264cf4f9d26647567d0ce263af4ffd6d44e02369d0582ed589e9bbf29b52b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be2cb37db3630c274b00dcf2ba92d486bec4e2b194d6b05bed2a3bdf93b23f7c\",\"dweb:/ipfs/QmSWu6r2kKuwnuEaqSD5LgwtHeGYPoKmqLiVCLC2SbmnP7\"]},\"contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x56ab5e1b6a8a1dead3589eee655576a9eed0c139663ff01917da5c10dbe62bbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6937ae4422ad911c7d15dcc35932928251286fd4fc68358c6cca9e83a77189c4\",\"dweb:/ipfs/QmYUh1fE114R1byhFMRg4UndQ3KAoyfYjpJi5ewqj1y1ma\"]},\"contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xfa2d4e7ae4084ba16e2608caea4e2dfc0da8a8c253c291fd8678ef38470c4f74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1c752b7fd111af4b895b6b39e0cb7f2271203afcec1ea31a294e2f8a3149a83\",\"dweb:/ipfs/QmZGRRr84qBs2MJQcaudNgbaeCn8XtiicQqyuwD9yBe8h6\"]},\"contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x8eb1424715f384ccbed760b96cf49c716a9f644d3161fb7eb7ec58d76861d9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13fd4c6856abe659c029b27593765d01bb3e0a56728cade269712073d5862455\",\"dweb:/ipfs/QmYq68h1tJArzRjU2C8XLAap5dSiNEWFwhB4yyKVy2gbbR\"]},\"contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0xa05d54dc4a124da4f5f23bab5a493aacf5af88823d961a0840193c1a7b314d03\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fc52ad89fbc209d82ac5d3880fc364798d3d62ae1e13ceac382385c38cdc44\",\"dweb:/ipfs/QmQBRn8BW5qVUhKAL83TTbVbaAdi6YKjSi6MFr8knnRTnP\"]},\"contracts/token/ERC721/extensions/ERC721Metadata_URI.sol\":{\"keccak256\":\"0xbaa67b8cf04df765f33f7a9db95b6139bf74d9f019d983931c68a28ae4d76af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02ebd857c4b277bf6773f691d9ed8949e7ae5a42fffb024d3d3b0b144b721b41\",\"dweb:/ipfs/QmQZZEEuWMMxtbtahSAVrvm6JHpcDzrevFfmGXdfvHJtqc\"]},\"contracts/token/ERC721/extensions/ERC721Royalties.sol\":{\"keccak256\":\"0x352420aa12deeec0d70654458f08ccb58f15105d12828018475aa580ff0f2a01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4005b59019c9d7e8f06a6ae8cd1c1b618c5da59a1a92116cb69a3af8465f0306\",\"dweb:/ipfs/QmPYmSegaKLFKHC8QmDdzLTggvpiaJV5qxYLXpu3apqWbS\"]},\"contracts/token/ERC721/presets/ERC721Sovereign.sol\":{\"keccak256\":\"0xca0d199125a948b5ca668e326da4d1d43e90e5e44574eca7ab7a8a7a4422f7d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://728bfea4509d20066334d42cc0acb3bf9269d4a3e7581744264f83923e5ca5af\",\"dweb:/ipfs/QmR4Q8yL2dmGkWF5scPwpJEVbpcpD7BzST3TEBZcjiequJ\"]},\"contracts/token/common/DecodeTokenURI.sol\":{\"keccak256\":\"0x94290c9d8b146ecdf51ef8d06abe343d5702616e47162ef116351c7495e84c02\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2a10edf2fd35ae1e2565de1ef4cb89c44a16c4fe46ca56a4dcb457b0ebef4f5\",\"dweb:/ipfs/QmRwfsffDfkdHiHqfR9DddgY2AchvvQD2uezdfgPpHC5pr\"]},\"contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x6984aefb2ce8c5637f7cdf8a352a78f9f87ed9ded599187c4ece8ff34cc231a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://275d02a60d5e08f7e95c0d4cbd03fc23327cd1d391de4589cf25670fc671ed4f\",\"dweb:/ipfs/QmdgCGFNk4CCiyBrVcoYms9KR443wDK5LC2YkJm77twNy8\"]},\"contracts/token/common/ERC712.sol\":{\"keccak256\":\"0xd005cb995658f3e2ef283112ad9be22b565c8a9a257332413b01ea4621d0e40f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01aeca036a9f595fda0a27242ab2015d1e775bf2912a42830178b57b72af85dc\",\"dweb:/ipfs/QmUvCfi2eorsDBJbA5k4azZfhmo6F725XgvRu7x977myWj\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x8cd846c2836ec70de0117b60b99fab3057f6d52f69757c42ee247e5b70de9227\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40d2ee6f3f83cea1b24f8d744b291bae16a16d1f14a0688c260df13bcd61938a\",\"dweb:/ipfs/QmZqRgDrR6r8D3tghbtYJSD5uTgiQf6od3PTmnjAEwGNJe\"]},\"contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xb739e54bef5daa5d5be886a0533002bd2d1ea1ac32cfc6f0c94d015a4448d48f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccad4fcf7316d54f137ccc229915c4d7c2dc0f98c7c3f5465cb69d033a44c56b\",\"dweb:/ipfs/QmSnUcKVJ2FXXGHSoN8QGdokHMkSzyCxhg5sxxHEK5etHt\"]},\"contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x28d76bd6179311148fca09a9c8544d9e29e2656522f22e4aed0793da0f512ba4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93e152bfab6f8617537438b8b045aea9a0a3eb97edfbcf69cb6611c7e0609bbb\",\"dweb:/ipfs/QmSYx4fp6qX8Aob8nPbWzqXyxkgtxPtkuQJ8SeqwQGwVKj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "factory_",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "digests",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "VoidVouchers",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "exists",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoyalties",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EncodeType.Voucher",
              "name": "_voucher",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "tokenURI",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyerAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ERC1271Account",
                  "type": "address"
                },
                {
                  "internalType": "uint16[]",
                  "name": "royaltyBps",
                  "type": "uint16[]"
                },
                {
                  "internalType": "uint16[]",
                  "name": "commissionBps",
                  "type": "uint16[]"
                },
                {
                  "internalType": "address[]",
                  "name": "royaltyRecipients",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "commissionRecipients",
                  "type": "address[]"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTypedDataDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "_digest",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isSecondaryMarket",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EncodeType.Voucher",
              "name": "_voucher",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "tokenURI",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyerAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ERC1271Account",
                  "type": "address"
                },
                {
                  "internalType": "uint16[]",
                  "name": "royaltyBps",
                  "type": "uint16[]"
                },
                {
                  "internalType": "uint16[]",
                  "name": "commissionBps",
                  "type": "uint16[]"
                },
                {
                  "internalType": "address[]",
                  "name": "royaltyRecipients",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "commissionRecipients",
                  "type": "address[]"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "lazyBuy"
        },
        {
          "inputs": [
            {
              "internalType": "struct EncodeType.Voucher",
              "name": "_voucher",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "tokenURI",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "endTime",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "salt",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "buyerAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "ERC1271Account",
                  "type": "address"
                },
                {
                  "internalType": "uint16[]",
                  "name": "royaltyBps",
                  "type": "uint16[]"
                },
                {
                  "internalType": "uint16[]",
                  "name": "commissionBps",
                  "type": "uint16[]"
                },
                {
                  "internalType": "address[]",
                  "name": "royaltyRecipients",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "commissionRecipients",
                  "type": "address[]"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_signature",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "lazyMint"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "ninfaRoyaltyInfo",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "recipients",
              "type": "address[]"
            },
            {
              "internalType": "uint16[]",
              "name": "bps",
              "type": "uint16[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "royaltyInfo",
          "outputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "baseURI_",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBaseURI"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint16[]",
              "name": "_royaltyBps",
              "type": "uint16[]"
            },
            {
              "internalType": "address[]",
              "name": "_royaltyRecipients",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRoyaltyInfo"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOfOwnerByIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "_digests",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "voidVouchers"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address)": {
            "details": "WARNING this function SHOULD only be called by frontends due to unbound looppublic visibility as it is needed by"
          },
          "burn(uint256)": {
            "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
          },
          "exists(uint256)": {
            "details": "same function interface as erc1155, so that external contracts, i.e. the marketplace, can check either erc without requiring an if/else statement"
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(bytes)": {
            "details": "Grants `DEFAULT_ADMIN_ROLE` and `MINTER_ROLE` to the account that deploys the contract.      `MINTER_ROLE` is needed in case the deployer may want to use or allow other accounts to mint on their self-sovereign collection"
          },
          "lazyBuy((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]),bytes,bytes,address)": {
            "params": {
              "_voucher": ".value in this case is not the price of the token, but the tokenId"
            }
          },
          "lazyMint((bytes32,uint256,uint256,uint256,uint256,address,address,uint16[],uint16[],address[],address[]),bytes,bytes,address)": {
            "params": {
              "_data": "_data bytes are passed to `onErc1155Received` function if the `_to` address is a contract, for example a marketplace.      `onErc1155Received` is not being called on the minter's address when a new tokenId is minted however, even if it was contract.",
              "_to": "buyer, needed if using a external payment gateway, so that the minted tokenId value is sent to the address specified insead of `msg.sender`",
              "_voucher": "voucher struct containing the tokenId metadata."
            }
          },
          "mint(address,bytes)": {
            "details": "_tokenURI Replaces deprecated Openzeppelin contracts v4.0 `ERC721Metadata_URI` extension      See https://forum.openzeppelin.com/t/why-doesnt-openzeppelin-erc721-contain-settokenuri/6373 and https://forum.openzeppelin.com/t/function-settokenuri-in-erc721-is-gone-with-pragma-0-8-0/5978/2when minted for the first time, royalty recipient MUST be set to msg.sender, i.e. minter/artist;      royalty receipient cannot and SHOULD not be set to an address different than the minter's such as a payment splitter or else `setRoyaltyRecipient` function will revert when called (unless receiver )",
            "params": {
              "_data": "bytes should be in the following format/order: `abi.encodePacked(bytes32 _tokenURI, address [] memory _royaltyRecipients, uint16[] memory _royaltyBps`",
              "_to": "is not only the recipient, but also it is set as the address that will be used for access control when calling the `setRoyaltyInfo` function. Hence `_to` MUST be an address controlled by the artist/minter in order to prevent unauthorized changes to the royalty info."
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}. `supportsInterface()` was first implemented by all contracts and later all implementations removed, hardcoding interface IDs in order to save some gas and simplify the code."
          },
          "tokenByIndex(uint256)": {
            "details": "Throws if `_index` >= `totalSupply()`.",
            "params": {
              "_index": "A counter less than `totalSupply()`"
            },
            "returns": {
              "_0": "The token identifier for the `_index`th NFT,  (sort order not specified)"
            }
          },
          "totalSupply()": {
            "returns": {
              "_0": "A count of valid NFTs tracked by this contract, where each one of  them has an assigned and queryable owner not equal to the zero address"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "tokenByIndex(uint256)": {
            "notice": "Enumerate valid NFTs"
          },
          "totalSupply()": {
            "notice": "Count NFTs tracked by this contract"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/solmate/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solmate/=lib/solmate/src/",
        "src/=contracts/",
        "test/=test/"
      ],
      "optimizer": {
        "runs": 4194304,
        "details": {
          "peephole": true,
          "inliner": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": "dhfoDgvulfnTUtnIf:fDnTOcmu"
          }
        }
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "contracts/token/ERC721/presets/ERC721Sovereign.sol": "ERC721Sovereign"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "contracts/access/AccessControl.sol": {
        "keccak256": "0xcaf264cf4f9d26647567d0ce263af4ffd6d44e02369d0582ed589e9bbf29b52b",
        "urls": [
          "bzz-raw://be2cb37db3630c274b00dcf2ba92d486bec4e2b194d6b05bed2a3bdf93b23f7c",
          "dweb:/ipfs/QmSWu6r2kKuwnuEaqSD5LgwtHeGYPoKmqLiVCLC2SbmnP7"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x56ab5e1b6a8a1dead3589eee655576a9eed0c139663ff01917da5c10dbe62bbd",
        "urls": [
          "bzz-raw://6937ae4422ad911c7d15dcc35932928251286fd4fc68358c6cca9e83a77189c4",
          "dweb:/ipfs/QmYUh1fE114R1byhFMRg4UndQ3KAoyfYjpJi5ewqj1y1ma"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xfa2d4e7ae4084ba16e2608caea4e2dfc0da8a8c253c291fd8678ef38470c4f74",
        "urls": [
          "bzz-raw://c1c752b7fd111af4b895b6b39e0cb7f2271203afcec1ea31a294e2f8a3149a83",
          "dweb:/ipfs/QmZGRRr84qBs2MJQcaudNgbaeCn8XtiicQqyuwD9yBe8h6"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/extensions/ERC721Burnable.sol": {
        "keccak256": "0x8eb1424715f384ccbed760b96cf49c716a9f644d3161fb7eb7ec58d76861d9a6",
        "urls": [
          "bzz-raw://13fd4c6856abe659c029b27593765d01bb3e0a56728cade269712073d5862455",
          "dweb:/ipfs/QmYq68h1tJArzRjU2C8XLAap5dSiNEWFwhB4yyKVy2gbbR"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0xa05d54dc4a124da4f5f23bab5a493aacf5af88823d961a0840193c1a7b314d03",
        "urls": [
          "bzz-raw://96fc52ad89fbc209d82ac5d3880fc364798d3d62ae1e13ceac382385c38cdc44",
          "dweb:/ipfs/QmQBRn8BW5qVUhKAL83TTbVbaAdi6YKjSi6MFr8knnRTnP"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/extensions/ERC721Metadata_URI.sol": {
        "keccak256": "0xbaa67b8cf04df765f33f7a9db95b6139bf74d9f019d983931c68a28ae4d76af3",
        "urls": [
          "bzz-raw://02ebd857c4b277bf6773f691d9ed8949e7ae5a42fffb024d3d3b0b144b721b41",
          "dweb:/ipfs/QmQZZEEuWMMxtbtahSAVrvm6JHpcDzrevFfmGXdfvHJtqc"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/extensions/ERC721Royalties.sol": {
        "keccak256": "0x352420aa12deeec0d70654458f08ccb58f15105d12828018475aa580ff0f2a01",
        "urls": [
          "bzz-raw://4005b59019c9d7e8f06a6ae8cd1c1b618c5da59a1a92116cb69a3af8465f0306",
          "dweb:/ipfs/QmPYmSegaKLFKHC8QmDdzLTggvpiaJV5qxYLXpu3apqWbS"
        ],
        "license": "MIT"
      },
      "contracts/token/ERC721/presets/ERC721Sovereign.sol": {
        "keccak256": "0xca0d199125a948b5ca668e326da4d1d43e90e5e44574eca7ab7a8a7a4422f7d1",
        "urls": [
          "bzz-raw://728bfea4509d20066334d42cc0acb3bf9269d4a3e7581744264f83923e5ca5af",
          "dweb:/ipfs/QmR4Q8yL2dmGkWF5scPwpJEVbpcpD7BzST3TEBZcjiequJ"
        ],
        "license": "MIT"
      },
      "contracts/token/common/DecodeTokenURI.sol": {
        "keccak256": "0x94290c9d8b146ecdf51ef8d06abe343d5702616e47162ef116351c7495e84c02",
        "urls": [
          "bzz-raw://f2a10edf2fd35ae1e2565de1ef4cb89c44a16c4fe46ca56a4dcb457b0ebef4f5",
          "dweb:/ipfs/QmRwfsffDfkdHiHqfR9DddgY2AchvvQD2uezdfgPpHC5pr"
        ],
        "license": "MIT"
      },
      "contracts/token/common/ERC2981.sol": {
        "keccak256": "0x6984aefb2ce8c5637f7cdf8a352a78f9f87ed9ded599187c4ece8ff34cc231a1",
        "urls": [
          "bzz-raw://275d02a60d5e08f7e95c0d4cbd03fc23327cd1d391de4589cf25670fc671ed4f",
          "dweb:/ipfs/QmdgCGFNk4CCiyBrVcoYms9KR443wDK5LC2YkJm77twNy8"
        ],
        "license": "MIT"
      },
      "contracts/token/common/ERC712.sol": {
        "keccak256": "0xd005cb995658f3e2ef283112ad9be22b565c8a9a257332413b01ea4621d0e40f",
        "urls": [
          "bzz-raw://01aeca036a9f595fda0a27242ab2015d1e775bf2912a42830178b57b72af85dc",
          "dweb:/ipfs/QmUvCfi2eorsDBJbA5k4azZfhmo6F725XgvRu7x977myWj"
        ],
        "license": "MIT"
      },
      "contracts/utils/Address.sol": {
        "keccak256": "0x8cd846c2836ec70de0117b60b99fab3057f6d52f69757c42ee247e5b70de9227",
        "urls": [
          "bzz-raw://40d2ee6f3f83cea1b24f8d744b291bae16a16d1f14a0688c260df13bcd61938a",
          "dweb:/ipfs/QmZqRgDrR6r8D3tghbtYJSD5uTgiQf6od3PTmnjAEwGNJe"
        ],
        "license": "MIT"
      },
      "contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xb739e54bef5daa5d5be886a0533002bd2d1ea1ac32cfc6f0c94d015a4448d48f",
        "urls": [
          "bzz-raw://ccad4fcf7316d54f137ccc229915c4d7c2dc0f98c7c3f5465cb69d033a44c56b",
          "dweb:/ipfs/QmSnUcKVJ2FXXGHSoN8QGdokHMkSzyCxhg5sxxHEK5etHt"
        ],
        "license": "MIT"
      },
      "contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0x28d76bd6179311148fca09a9c8544d9e29e2656522f22e4aed0793da0f512ba4",
        "urls": [
          "bzz-raw://93e152bfab6f8617537438b8b045aea9a0a3eb97edfbcf69cb6611c7e0609bbb",
          "dweb:/ipfs/QmSYx4fp6qX8Aob8nPbWzqXyxkgtxPtkuQJ8SeqwQGwVKj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/token/ERC721/presets/ERC721Sovereign.sol",
    "id": 1937,
    "exportedSymbols": {
      "AccessControl": [
        260
      ],
      "Address": [
        3015
      ],
      "DecodeTokenURI": [
        2216
      ],
      "ECDSA": [
        3075
      ],
      "ERC2981": [
        2647
      ],
      "ERC712": [
        2926
      ],
      "ERC721": [
        1072
      ],
      "ERC721Burnable": [
        1116
      ],
      "ERC721Enumerable": [
        1170
      ],
      "ERC721Metadata_URI": [
        1319
      ],
      "ERC721Royalties": [
        1409
      ],
      "ERC721Sovereign": [
        1936
      ],
      "EncodeType": [
        2680
      ],
      "IERC721Receiver": [
        1090
      ],
      "SignatureChecker": [
        3130
      ]
    },
    "nodeType": "SourceUnit",
    "src": "694:12759:9",
    "nodes": [
      {
        "id": 1411,
        "nodeType": "PragmaDirective",
        "src": "694:23:9",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".22"
        ]
      },
      {
        "id": 1412,
        "nodeType": "ImportDirective",
        "src": "719:43:9",
        "nodes": [],
        "absolutePath": "contracts/access/AccessControl.sol",
        "file": "../../../access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 261,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1413,
        "nodeType": "ImportDirective",
        "src": "763:47:9",
        "nodes": [],
        "absolutePath": "contracts/utils/cryptography/ECDSA.sol",
        "file": "../../../utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 3076,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1414,
        "nodeType": "ImportDirective",
        "src": "811:58:9",
        "nodes": [],
        "absolutePath": "contracts/utils/cryptography/SignatureChecker.sol",
        "file": "../../../utils/cryptography/SignatureChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 3131,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1415,
        "nodeType": "ImportDirective",
        "src": "870:33:9",
        "nodes": [],
        "absolutePath": "contracts/token/common/ERC712.sol",
        "file": "../../common/ERC712.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 2927,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1416,
        "nodeType": "ImportDirective",
        "src": "904:44:9",
        "nodes": [],
        "absolutePath": "contracts/token/ERC721/extensions/ERC721Enumerable.sol",
        "file": "../extensions/ERC721Enumerable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 1171,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1417,
        "nodeType": "ImportDirective",
        "src": "949:46:9",
        "nodes": [],
        "absolutePath": "contracts/token/ERC721/extensions/ERC721Metadata_URI.sol",
        "file": "../extensions/ERC721Metadata_URI.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 1320,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1418,
        "nodeType": "ImportDirective",
        "src": "996:43:9",
        "nodes": [],
        "absolutePath": "contracts/token/ERC721/extensions/ERC721Royalties.sol",
        "file": "../extensions/ERC721Royalties.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 1410,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1419,
        "nodeType": "ImportDirective",
        "src": "1040:42:9",
        "nodes": [],
        "absolutePath": "contracts/token/ERC721/extensions/ERC721Burnable.sol",
        "file": "../extensions/ERC721Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1937,
        "sourceUnit": 1117,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1936,
        "nodeType": "ContractDefinition",
        "src": "1542:11910:9",
        "nodes": [
          {
            "id": 1435,
            "nodeType": "UsingForDirective",
            "src": "1693:35:9",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1433,
              "name": "SignatureChecker",
              "nameLocations": [
                "1699:16:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3130,
              "src": "1699:16:9"
            },
            "typeName": {
              "id": 1434,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1720:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1438,
            "nodeType": "UsingForDirective",
            "src": "1733:26:9",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1436,
              "name": "Address",
              "nameLocations": [
                "1739:7:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3015,
              "src": "1739:7:9"
            },
            "typeName": {
              "id": 1437,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1751:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 1441,
            "nodeType": "UsingForDirective",
            "src": "1764:24:9",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1439,
              "name": "ECDSA",
              "nameLocations": [
                "1770:5:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3075,
              "src": "1770:5:9"
            },
            "typeName": {
              "id": 1440,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1780:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "id": 1445,
            "nodeType": "VariableDeclaration",
            "src": "2165:105:9",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 1442,
              "nodeType": "StructuredDocumentation",
              "src": "1995:165:9",
              "text": " @dev `MINTER_ROLE` is needed in case the deployer may want to use or\n allow other accounts to mint on their\n self-sovereign collection"
            },
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nameLocation": "2190:11:9",
            "scope": 1936,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1443,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2165:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307839663264663066656432633737363438646535383630613463633530386364303831386338356238623861316162346365656566386439383163383935366136",
              "id": 1444,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2204:66:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_71998914331801701415977457805802827292338598818749192222732755537001613711014_by_1",
                "typeString": "int_const 7199...(69 digits omitted)...1014"
              },
              "value": "0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6"
            },
            "visibility": "private"
          },
          {
            "id": 1448,
            "nodeType": "VariableDeclaration",
            "src": "2305:106:9",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "CURATOR_ROLE",
            "nameLocation": "2330:12:9",
            "scope": 1936,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 1446,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2305:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "hexValue": "307838353064353835656237663032346363656535653638653535663263323663633732653165366565343536616366363231333537353761356562396434613130",
              "id": 1447,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2345:66:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_60181187780700991716638501677967636528148201386683529921250888267403804625424_by_1",
                "typeString": "int_const 6018...(69 digits omitted)...5424"
              },
              "value": "0x850d585eb7f024ccee5e68e55f2c26cc72e1e6ee456acf62135757a5eb9d4a10"
            },
            "visibility": "private"
          },
          {
            "id": 1451,
            "nodeType": "VariableDeclaration",
            "src": "2665:34:9",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 1449,
              "nodeType": "StructuredDocumentation",
              "src": "2446:214:9",
              "text": " @dev constant set at deployment of master contract, replaces\n `initializer` modifier reducing the cost of calling\n `initialize` from the factory contract when a new clone is deployed."
            },
            "mutability": "immutable",
            "name": "_FACTORY",
            "nameLocation": "2691:8:9",
            "scope": 1936,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1450,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2665:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 1470,
            "nodeType": "FunctionDefinition",
            "src": "4091:128:9",
            "nodes": [],
            "body": {
              "id": 1469,
              "nodeType": "Block",
              "src": "4169:50:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1463,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1454,
                        "src": "4185:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1464,
                          "name": "_owners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "4190:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4198:6:9",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "4190:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1466,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1456,
                        "src": "4206:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1462,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1781
                      ],
                      "referencedDeclaration": 1781,
                      "src": "4179:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4179:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1468,
                  "nodeType": "ExpressionStatement",
                  "src": "4179:33:9"
                }
              ]
            },
            "documentation": {
              "id": 1452,
              "nodeType": "StructuredDocumentation",
              "src": "2908:1178:9",
              "text": " @param _data bytes should be in the following format/order:\n `abi.encodePacked(bytes32 _tokenURI, address [] memory _royaltyRecipients, uint16[] memory _royaltyBps`\n @param _to is not only the recipient, but also it is set as the address that will be used for access control when\n calling the `setRoyaltyInfo` function.\n Hence `_to` MUST be an address controlled by the artist/minter in order to prevent unauthorized changes to the\n royalty info.\n @dev _tokenURI Replaces deprecated Openzeppelin contracts v4.0\n `ERC721Metadata_URI` extension\n      See\n https://forum.openzeppelin.com/t/why-doesnt-openzeppelin-erc721-contain-settokenuri/6373\n and\n https://forum.openzeppelin.com/t/function-settokenuri-in-erc721-is-gone-with-pragma-0-8-0/5978/2\n @dev when minted for the first time, royalty recipient MUST be set to\n msg.sender, i.e. minter/artist;\n      royalty receipient cannot and SHOULD not be set to an address\n different than the minter's such as a payment\n splitter or else `setRoyaltyRecipient` function will revert when called\n (unless receiver )"
            },
            "functionSelector": "b510391f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1459,
                    "name": "MINTER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1445,
                    "src": "4156:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 1460,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1458,
                  "name": "onlyRole",
                  "nameLocations": [
                    "4147:8:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 57,
                  "src": "4147:8:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "4147:21:9"
              }
            ],
            "name": "mint",
            "nameLocation": "4100:4:9",
            "parameters": {
              "id": 1457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1454,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4113:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "4105:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1453,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4105:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1456,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4131:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1470,
                  "src": "4118:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1455,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4118:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4104:33:9"
            },
            "returnParameters": {
              "id": 1461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4169:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1587,
            "nodeType": "FunctionDefinition",
            "src": "4789:1646:9",
            "nodes": [],
            "body": {
              "id": 1586,
              "nodeType": "Block",
              "src": "4982:1453:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1484,
                            "name": "_voucher",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1474,
                            "src": "5000:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                              "typeString": "struct EncodeType.Voucher calldata"
                            }
                          },
                          "id": 1485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5009:5:9",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2656,
                          "src": "5000:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1486,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5018:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5022:5:9",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5018:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5000:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4992:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4992:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1490,
                  "nodeType": "ExpressionStatement",
                  "src": "4992:36:9"
                },
                {
                  "assignments": [
                    1493
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1493,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "5321:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1586,
                      "src": "5313:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1492,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5313:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev ensuring that signer has MINTER_ROLE and that tokenIds are incremented sequentially\n @dev trying to replay the same voucher and signature will revert as the tokenURI will be the same,\n i.e. no need to void vouchers",
                  "id": 1496,
                  "initialValue": {
                    "expression": {
                      "id": 1494,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 529,
                      "src": "5331:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5339:6:9",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "5331:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5313:32:9"
                },
                {
                  "assignments": [
                    1498
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1498,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "5363:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1586,
                      "src": "5355:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1497,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5355:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1502,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1500,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "5391:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      ],
                      "id": 1499,
                      "name": "getTypedDataDigest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "5372:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Voucher_$2679_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct EncodeType.Voucher calldata) view returns (bytes32)"
                      }
                    },
                    "id": 1501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5372:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5355:45:9"
                },
                {
                  "assignments": [
                    1504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1504,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "5419:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1586,
                      "src": "5411:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1503,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5411:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1505,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5411:14:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1506,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "5440:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      },
                      "id": 1507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5449:14:9",
                      "memberName": "ERC1271Account",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2666,
                      "src": "5440:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1508,
                      "name": "ZERO_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "5467:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5440:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1543,
                    "nodeType": "Block",
                    "src": "5598:158:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1525,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1504,
                            "src": "5612:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1526,
                              "name": "_voucher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "5621:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                                "typeString": "struct EncodeType.Voucher calldata"
                              }
                            },
                            "id": 1527,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5630:14:9",
                            "memberName": "ERC1271Account",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2666,
                            "src": "5621:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5612:32:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1529,
                        "nodeType": "ExpressionStatement",
                        "src": "5612:32:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 1540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1532,
                                    "name": "MINTER_ROLE",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1445,
                                    "src": "5674:11:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1533,
                                    "name": "signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1504,
                                    "src": "5687:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1531,
                                  "name": "hasRole",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 75,
                                  "src": "5666:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (bytes32,address) view returns (bool)"
                                  }
                                },
                                "id": 1534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5666:28:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 1537,
                                    "name": "digest",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1498,
                                    "src": "5725:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 1538,
                                    "name": "_signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1476,
                                    "src": "5733:10:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1535,
                                    "name": "signer",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1504,
                                    "src": "5698:6:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1536,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5705:19:9",
                                  "memberName": "isValidSignatureNow",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3129,
                                  "src": "5698:26:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$attached_to$_t_address_$",
                                    "typeString": "function (address,bytes32,bytes memory) view returns (bool)"
                                  }
                                },
                                "id": 1539,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5698:46:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "5666:78:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1530,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5658:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5658:87:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1542,
                        "nodeType": "ExpressionStatement",
                        "src": "5658:87:9"
                      }
                    ]
                  },
                  "id": 1544,
                  "nodeType": "IfStatement",
                  "src": "5436:320:9",
                  "trueBody": {
                    "id": 1524,
                    "nodeType": "Block",
                    "src": "5481:111:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1510,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1504,
                            "src": "5495:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1513,
                                "name": "_signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1476,
                                "src": "5519:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "expression": {
                                "id": 1511,
                                "name": "digest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1498,
                                "src": "5504:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 1512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5511:7:9",
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3057,
                              "src": "5504:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 1514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5504:26:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5495:35:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "5495:35:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1519,
                                  "name": "MINTER_ROLE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1445,
                                  "src": "5560:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 1520,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1504,
                                  "src": "5573:6:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1518,
                                "name": "hasRole",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 75,
                                "src": "5552:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (bytes32,address) view returns (bool)"
                                }
                              },
                              "id": 1521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5552:28:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1517,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5544:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5544:37:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1523,
                        "nodeType": "ExpressionStatement",
                        "src": "5544:37:9"
                      }
                    ]
                  }
                },
                {
                  "documentation": " @dev _voucher.tokenURI is prepended to the _data bytes, since it is bytes32 id doesn't need to be padded\n hence encodePacked is used.\n @dev since the new token is being minted to the signer, there is no risk of reentrancy due to untrusted\n external contracts.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1546,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "6121:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1547,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "6141:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1550,
                              "name": "_voucher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1474,
                              "src": "6173:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                                "typeString": "struct EncodeType.Voucher calldata"
                              }
                            },
                            "id": 1551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6182:8:9",
                            "memberName": "tokenURI",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2654,
                            "src": "6173:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1554,
                                  "name": "_voucher",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "6203:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                                    "typeString": "struct EncodeType.Voucher calldata"
                                  }
                                },
                                "id": 1555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6212:17:9",
                                "memberName": "royaltyRecipients",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2675,
                                "src": "6203:26:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              {
                                "expression": {
                                  "id": 1556,
                                  "name": "_voucher",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1474,
                                  "src": "6231:8:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                                    "typeString": "struct EncodeType.Voucher calldata"
                                  }
                                },
                                "id": 1557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6240:10:9",
                                "memberName": "royaltyBps",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2669,
                                "src": "6231:19:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
                                  "typeString": "uint16[] calldata"
                                }
                              },
                              {
                                "hexValue": "",
                                "id": 1558,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6252:2:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
                                  "typeString": "uint16[] calldata"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "id": 1552,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6192:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 1553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6196:6:9",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "6192:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 1559,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6192:63:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1548,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6162:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6166:6:9",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "6162:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6162:94:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1545,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1781
                      ],
                      "referencedDeclaration": 1781,
                      "src": "6102:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6102:164:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:164:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1564,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1474,
                        "src": "6286:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      },
                      {
                        "id": 1565,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1498,
                        "src": "6296:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1566,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "6304:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1567,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "6309:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1568,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6317:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6321:5:9",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6317:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1563,
                      "name": "_lazyBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2844,
                      "src": "6277:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Voucher_$2679_calldata_ptr_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (struct EncodeType.Voucher calldata,bytes32,address,address,uint256)"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6277:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "6277:50:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1573,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1504,
                        "src": "6352:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1574,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1480,
                        "src": "6360:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1575,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1493,
                        "src": "6365:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1576,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1478,
                        "src": "6374:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1572,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "6338:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6338:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1578,
                  "nodeType": "ExpressionStatement",
                  "src": "6338:42:9"
                },
                {
                  "expression": {
                    "id": 1584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1579,
                          "name": "_royaltyInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2230,
                          "src": "6390:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2244_storage_$",
                            "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
                          }
                        },
                        "id": 1581,
                        "indexExpression": {
                          "id": 1580,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1493,
                          "src": "6403:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6390:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RoyaltyInfo_$2244_storage",
                          "typeString": "struct ERC2981.RoyaltyInfo storage ref"
                        }
                      },
                      "id": 1582,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6412:9:9",
                      "memberName": "secondary",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2243,
                      "src": "6390:31:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6424:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6390:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1585,
                  "nodeType": "ExpressionStatement",
                  "src": "6390:38:9"
                }
              ]
            },
            "documentation": {
              "id": 1471,
              "nodeType": "StructuredDocumentation",
              "src": "4225:559:9",
              "text": " @param _voucher voucher struct containing the tokenId metadata.\n @param _to buyer, needed if using a external payment gateway, so that the\n minted tokenId value is sent to the\n address specified insead of `msg.sender`\n @param _data _data bytes are passed to `onErc1155Received` function if the\n `_to` address is a contract, for\n example a marketplace.\n      `onErc1155Received` is not being called on the minter's address when\n a new tokenId is minted however, even\n if it was contract."
            },
            "functionSelector": "422b0d25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyMint",
            "nameLocation": "4798:8:9",
            "parameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1474,
                  "mutability": "mutable",
                  "name": "_voucher",
                  "nameLocation": "4844:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "4816:36:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                    "typeString": "struct EncodeType.Voucher"
                  },
                  "typeName": {
                    "id": 1473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1472,
                      "name": "EncodeType.Voucher",
                      "nameLocations": [
                        "4816:10:9",
                        "4827:7:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2679,
                      "src": "4816:18:9"
                    },
                    "referencedDeclaration": 2679,
                    "src": "4816:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voucher_$2679_storage_ptr",
                      "typeString": "struct EncodeType.Voucher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1476,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "4877:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "4862:25:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1475,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1478,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4912:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "4897:20:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1477,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4897:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4935:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1587,
                  "src": "4927:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4927:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4806:138:9"
            },
            "returnParameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4982:0:9"
            },
            "scope": 1936,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1712,
            "nodeType": "FunctionDefinition",
            "src": "6546:1284:9",
            "nodes": [],
            "body": {
              "id": 1711,
              "nodeType": "Block",
              "src": "6738:1092:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1601
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1601,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "6756:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "6748:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1600,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "6748:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1605,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1603,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "6784:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      ],
                      "id": 1602,
                      "name": "getTypedDataDigest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2909,
                      "src": "6765:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Voucher_$2679_calldata_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct EncodeType.Voucher calldata) view returns (bytes32)"
                      }
                    },
                    "id": 1604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6765:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6748:45:9"
                },
                {
                  "assignments": [
                    1607
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1607,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "6811:6:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "6803:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1606,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6803:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1612,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1610,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "6835:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 1608,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "6820:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 1609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6827:7:9",
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3057,
                      "src": "6820:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 1611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6820:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6803:43:9"
                },
                {
                  "assignments": [
                    1614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1614,
                      "mutability": "mutable",
                      "name": "sellerAmount",
                      "nameLocation": "6864:12:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1711,
                      "src": "6856:20:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6856:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1617,
                  "initialValue": {
                    "expression": {
                      "id": 1615,
                      "name": "_voucher",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1591,
                      "src": "6879:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                        "typeString": "struct EncodeType.Voucher calldata"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6888:5:9",
                    "memberName": "price",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2656,
                    "src": "6879:14:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6856:37:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1618,
                      "name": "sellerAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1614,
                      "src": "6908:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6923:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6908:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1686,
                  "nodeType": "IfStatement",
                  "src": "6904:596:9",
                  "trueBody": {
                    "id": 1685,
                    "nodeType": "Block",
                    "src": "6926:574:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1622,
                                "name": "sellerAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1614,
                                "src": "6948:12:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1623,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6964:3:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1624,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6968:5:9",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "6964:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6948:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 1621,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6940:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 1626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6940:34:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1627,
                        "nodeType": "ExpressionStatement",
                        "src": "6940:34:9"
                      },
                      {
                        "assignments": [
                          1632,
                          1635
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1632,
                            "mutability": "mutable",
                            "name": "royaltyRecipients",
                            "nameLocation": "7007:17:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1685,
                            "src": "6990:34:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1630,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6990:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1631,
                              "nodeType": "ArrayTypeName",
                              "src": "6990:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                "typeString": "address[]"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1635,
                            "mutability": "mutable",
                            "name": "royaltyBps",
                            "nameLocation": "7042:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1685,
                            "src": "7026:26:9",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                              "typeString": "uint16[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 1633,
                                "name": "uint16",
                                "nodeType": "ElementaryTypeName",
                                "src": "7026:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint16",
                                  "typeString": "uint16"
                                }
                              },
                              "id": 1634,
                              "nodeType": "ArrayTypeName",
                              "src": "7026:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                                "typeString": "uint16[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1640,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1637,
                                "name": "_voucher",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1591,
                                "src": "7074:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                                  "typeString": "struct EncodeType.Voucher calldata"
                                }
                              },
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7083:5:9",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2660,
                              "src": "7074:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1636,
                            "name": "_ninfaRoyaltyInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2438,
                            "src": "7056:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint16_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) returns (address[] memory,uint16[] memory)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7056:33:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint16_$dyn_memory_ptr_$",
                            "typeString": "tuple(address[] memory,uint16[] memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6989:100:9"
                      },
                      {
                        "assignments": [
                          1642
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1642,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "7112:1:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 1685,
                            "src": "7104:9:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1641,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7104:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1645,
                        "initialValue": {
                          "expression": {
                            "id": 1643,
                            "name": "royaltyRecipients",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1632,
                            "src": "7116:17:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7134:6:9",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7116:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7104:36:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1646,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1642,
                            "src": "7158:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7162:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "7158:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1684,
                        "nodeType": "IfStatement",
                        "src": "7154:336:9",
                        "trueBody": {
                          "id": 1683,
                          "nodeType": "Block",
                          "src": "7165:325:9",
                          "statements": [
                            {
                              "assignments": [
                                1650
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1650,
                                  "mutability": "mutable",
                                  "name": "royaltyAmount",
                                  "nameLocation": "7191:13:9",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1683,
                                  "src": "7183:21:9",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1649,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7183:7:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1651,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "7183:21:9"
                            },
                            {
                              "body": {
                                "id": 1678,
                                "nodeType": "Block",
                                "src": "7225:236:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1653,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "--",
                                      "prefix": true,
                                      "src": "7247:3:9",
                                      "subExpression": {
                                        "id": 1652,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1642,
                                        "src": "7249:1:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1654,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7247:3:9"
                                  },
                                  {
                                    "expression": {
                                      "id": 1665,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1655,
                                        "name": "royaltyAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1650,
                                        "src": "7272:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1664,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 1661,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 1656,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "7289:3:9",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 1657,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "7293:5:9",
                                                "memberName": "value",
                                                "nodeType": "MemberAccess",
                                                "src": "7289:9:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "*",
                                              "rightExpression": {
                                                "baseExpression": {
                                                  "id": 1658,
                                                  "name": "royaltyBps",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1635,
                                                  "src": "7301:10:9",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                                                    "typeString": "uint16[] memory"
                                                  }
                                                },
                                                "id": 1660,
                                                "indexExpression": {
                                                  "id": 1659,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1642,
                                                  "src": "7312:1:9",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "7301:13:9",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint16",
                                                  "typeString": "uint16"
                                                }
                                              },
                                              "src": "7289:25:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 1662,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "7288:27:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "31305f303030",
                                          "id": 1663,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7318:6:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10000_by_1",
                                            "typeString": "int_const 10000"
                                          },
                                          "value": "10_000"
                                        },
                                        "src": "7288:36:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7272:52:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1666,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7272:52:9"
                                  },
                                  {
                                    "expression": {
                                      "id": 1669,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 1667,
                                        "name": "sellerAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1614,
                                        "src": "7346:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "-=",
                                      "rightHandSide": {
                                        "id": 1668,
                                        "name": "royaltyAmount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1650,
                                        "src": "7362:13:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7346:29:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1670,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7346:29:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 1675,
                                          "name": "royaltyAmount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1650,
                                          "src": "7428:13:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1671,
                                            "name": "royaltyRecipients",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1632,
                                            "src": "7397:17:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                              "typeString": "address[] memory"
                                            }
                                          },
                                          "id": 1673,
                                          "indexExpression": {
                                            "id": 1672,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1642,
                                            "src": "7415:1:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7397:20:9",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "id": 1674,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "7418:9:9",
                                        "memberName": "sendValue",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2954,
                                        "src": "7397:30:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$attached_to$_t_address_$",
                                          "typeString": "function (address,uint256)"
                                        }
                                      },
                                      "id": 1676,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7397:45:9",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1677,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7397:45:9"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1681,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1679,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1642,
                                  "src": "7469:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1680,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7473:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7469:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1682,
                              "nodeType": "DoWhileStatement",
                              "src": "7222:254:9"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "documentation": " @dev _lazyBuy outside of if statement as it contains require statements that should be executed regardless of\n price",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1688,
                        "name": "_voucher",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "7680:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        }
                      },
                      {
                        "id": 1689,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "7690:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1690,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1597,
                        "src": "7698:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1691,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "7703:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1692,
                        "name": "sellerAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1614,
                        "src": "7711:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                          "typeString": "struct EncodeType.Voucher calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1687,
                      "name": "_lazyBuy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2844,
                      "src": "7671:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Voucher_$2679_calldata_ptr_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (struct EncodeType.Voucher calldata,bytes32,address,address,uint256)"
                      }
                    },
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7671:53:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1694,
                  "nodeType": "ExpressionStatement",
                  "src": "7671:53:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1696,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1607,
                        "src": "7749:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1697,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1597,
                        "src": "7757:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1698,
                          "name": "_voucher",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1591,
                          "src": "7762:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                            "typeString": "struct EncodeType.Voucher calldata"
                          }
                        },
                        "id": 1699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7771:5:9",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2660,
                        "src": "7762:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1700,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1595,
                        "src": "7778:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 1695,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "7735:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7735:49:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "7735:49:9"
                },
                {
                  "expression": {
                    "id": 1709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1703,
                          "name": "_void",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2695,
                          "src": "7795:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_bytes32_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(bytes32 => bool))"
                          }
                        },
                        "id": 1706,
                        "indexExpression": {
                          "id": 1704,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1607,
                          "src": "7801:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7795:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 1707,
                      "indexExpression": {
                        "id": 1705,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1601,
                        "src": "7809:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7795:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7819:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7795:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1710,
                  "nodeType": "ExpressionStatement",
                  "src": "7795:28:9"
                }
              ]
            },
            "documentation": {
              "id": 1588,
              "nodeType": "StructuredDocumentation",
              "src": "6441:100:9",
              "text": " @param _voucher.value in this case is not the price of the token, but the tokenId"
            },
            "functionSelector": "43b8736c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "lazyBuy",
            "nameLocation": "6555:7:9",
            "parameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1591,
                  "mutability": "mutable",
                  "name": "_voucher",
                  "nameLocation": "6600:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "6572:36:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Voucher_$2679_calldata_ptr",
                    "typeString": "struct EncodeType.Voucher"
                  },
                  "typeName": {
                    "id": 1590,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1589,
                      "name": "EncodeType.Voucher",
                      "nameLocations": [
                        "6572:10:9",
                        "6583:7:9"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2679,
                      "src": "6572:18:9"
                    },
                    "referencedDeclaration": 2679,
                    "src": "6572:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Voucher_$2679_storage_ptr",
                      "typeString": "struct EncodeType.Voucher"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1593,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "6633:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "6618:25:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1592,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6618:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6668:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "6653:20:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6653:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6691:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1712,
                  "src": "6683:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6683:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6562:138:9"
            },
            "returnParameters": {
              "id": 1599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6738:0:9"
            },
            "scope": 1936,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1740,
            "nodeType": "FunctionDefinition",
            "src": "8038:296:9",
            "nodes": [],
            "body": {
              "id": 1739,
              "nodeType": "Block",
              "src": "8197:137:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1724,
                              "name": "_royaltyInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2230,
                              "src": "8215:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_RoyaltyInfo_$2244_storage_$",
                                "typeString": "mapping(uint256 => struct ERC2981.RoyaltyInfo storage ref)"
                              }
                            },
                            "id": 1726,
                            "indexExpression": {
                              "id": 1725,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1714,
                              "src": "8228:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8215:22:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoyaltyInfo_$2244_storage",
                              "typeString": "struct ERC2981.RoyaltyInfo storage ref"
                            }
                          },
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8238:6:9",
                          "memberName": "minter",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2233,
                          "src": "8215:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 1728,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8248:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8252:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "8248:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8215:43:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8207:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8207:52:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1732,
                  "nodeType": "ExpressionStatement",
                  "src": "8207:52:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1734,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1714,
                        "src": "8285:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1735,
                        "name": "_royaltyBps",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1717,
                        "src": "8295:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        }
                      },
                      {
                        "id": 1736,
                        "name": "_royaltyRecipients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1720,
                        "src": "8308:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                          "typeString": "uint16[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 1733,
                      "name": "_setRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2622,
                      "src": "8269:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint16_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint16[] memory,address[] memory)"
                      }
                    },
                    "id": 1737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8269:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1738,
                  "nodeType": "ExpressionStatement",
                  "src": "8269:58:9"
                }
              ]
            },
            "functionSelector": "2f8983d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setRoyaltyInfo",
            "nameLocation": "8047:14:9",
            "parameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "8079:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "8071:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8071:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1717,
                  "mutability": "mutable",
                  "name": "_royaltyBps",
                  "nameLocation": "8113:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "8097:27:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint16_$dyn_memory_ptr",
                    "typeString": "uint16[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1715,
                      "name": "uint16",
                      "nodeType": "ElementaryTypeName",
                      "src": "8097:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "id": 1716,
                    "nodeType": "ArrayTypeName",
                    "src": "8097:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
                      "typeString": "uint16[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1720,
                  "mutability": "mutable",
                  "name": "_royaltyRecipients",
                  "nameLocation": "8151:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1740,
                  "src": "8134:35:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1718,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "8134:7:9",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1719,
                    "nodeType": "ArrayTypeName",
                    "src": "8134:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8061:114:9"
            },
            "returnParameters": {
              "id": 1722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8197:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1758,
            "nodeType": "FunctionDefinition",
            "src": "8542:151:9",
            "nodes": [],
            "body": {
              "id": 1757,
              "nodeType": "Block",
              "src": "8597:96:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1747,
                            "name": "DEFAULT_ADMIN_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "8623:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 1748,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "8643:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1749,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8647:6:9",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "8643:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1746,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 75,
                          "src": "8615:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 1750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8615:39:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8607:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8607:48:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1752,
                  "nodeType": "ExpressionStatement",
                  "src": "8607:48:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1754,
                        "name": "baseURI_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1742,
                        "src": "8677:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 1753,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1299,
                      "src": "8665:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_calldata_ptr_$returns$__$",
                        "typeString": "function (string calldata)"
                      }
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8665:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1756,
                  "nodeType": "ExpressionStatement",
                  "src": "8665:21:9"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBaseURI",
            "nameLocation": "8551:10:9",
            "parameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "baseURI_",
                  "nameLocation": "8578:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1758,
                  "src": "8562:24:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8562:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8561:26:9"
            },
            "returnParameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8597:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1781,
            "nodeType": "FunctionDefinition",
            "src": "9064:219:9",
            "nodes": [],
            "body": {
              "id": 1780,
              "nodeType": "Block",
              "src": "9238:45:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1775,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1761,
                        "src": "9260:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1776,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1763,
                        "src": "9265:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1777,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1765,
                        "src": "9270:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 1772,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9248:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Sovereign_$1936_$",
                          "typeString": "type(contract super ERC721Sovereign)"
                        }
                      },
                      "id": 1774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9254:5:9",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1288,
                      "src": "9248:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 1778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9248:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1779,
                  "nodeType": "ExpressionStatement",
                  "src": "9248:28:9"
                }
              ]
            },
            "baseFunctions": [
              892,
              1288,
              1408
            ],
            "documentation": {
              "id": 1759,
              "nodeType": "StructuredDocumentation",
              "src": "8901:158:9",
              "text": " @dev super._mint calls parent functions from the most derived to the most base contract: ERC721Metadata_URI,\n ERC721Royalties, ERC721"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9073:5:9",
            "overrides": {
              "id": 1770,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1767,
                  "name": "ERC721Metadata_URI",
                  "nameLocations": [
                    "9189:18:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1319,
                  "src": "9189:18:9"
                },
                {
                  "id": 1768,
                  "name": "ERC721Royalties",
                  "nameLocations": [
                    "9209:15:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1409,
                  "src": "9209:15:9"
                },
                {
                  "id": 1769,
                  "name": "ERC721",
                  "nameLocations": [
                    "9226:6:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1072,
                  "src": "9226:6:9"
                }
              ],
              "src": "9180:53:9"
            },
            "parameters": {
              "id": 1766,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1761,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9096:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "9088:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9088:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1763,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "9117:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "9109:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9109:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1765,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "9143:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1781,
                  "src": "9130:18:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1764,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9130:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9078:76:9"
            },
            "returnParameters": {
              "id": 1771,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9238:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1802,
            "nodeType": "FunctionDefinition",
            "src": "9471:172:9",
            "nodes": [],
            "body": {
              "id": 1801,
              "nodeType": "Block",
              "src": "9567:76:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1792,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "9596:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1791,
                      "name": "_deleteRoyaltyInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2633,
                      "src": "9577:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9577:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1794,
                  "nodeType": "ExpressionStatement",
                  "src": "9577:28:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1798,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1784,
                        "src": "9627:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1795,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9615:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC721Sovereign_$1936_$",
                          "typeString": "type(contract super ERC721Sovereign)"
                        }
                      },
                      "id": 1797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9621:5:9",
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1318,
                      "src": "9615:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9615:21:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1800,
                  "nodeType": "ExpressionStatement",
                  "src": "9615:21:9"
                }
              ]
            },
            "baseFunctions": [
              794,
              1318,
              1346
            ],
            "documentation": {
              "id": 1782,
              "nodeType": "StructuredDocumentation",
              "src": "9289:177:9",
              "text": " @param _tokenId token ID to burn\n @dev overrides _burn function of base contract and all extensions\n @dev deletes royalty info from storage"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9480:5:9",
            "overrides": {
              "id": 1789,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1786,
                  "name": "ERC721Royalties",
                  "nameLocations": [
                    "9522:15:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1409,
                  "src": "9522:15:9"
                },
                {
                  "id": 1787,
                  "name": "ERC721Metadata_URI",
                  "nameLocations": [
                    "9539:18:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1319,
                  "src": "9539:18:9"
                },
                {
                  "id": 1788,
                  "name": "ERC721",
                  "nameLocations": [
                    "9559:6:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1072,
                  "src": "9559:6:9"
                }
              ],
              "src": "9513:53:9"
            },
            "parameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1784,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "9494:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1802,
                  "src": "9486:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9486:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9485:18:9"
            },
            "returnParameters": {
              "id": 1790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9567:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1817,
            "nodeType": "FunctionDefinition",
            "src": "10039:110:9",
            "nodes": [],
            "body": {
              "id": 1816,
              "nodeType": "Block",
              "src": "10097:52:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1810,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 529,
                        "src": "10114:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1812,
                      "indexExpression": {
                        "id": 1811,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1805,
                        "src": "10122:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10114:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 1813,
                      "name": "ZERO_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "10130:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10114:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1809,
                  "id": 1815,
                  "nodeType": "Return",
                  "src": "10107:35:9"
                }
              ]
            },
            "documentation": {
              "id": 1803,
              "nodeType": "StructuredDocumentation",
              "src": "9851:183:9",
              "text": " @dev same function interface as erc1155, so that external contracts, i.e.\n the marketplace, can check either erc\n without requiring an if/else statement"
            },
            "functionSelector": "4f558e79",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exists",
            "nameLocation": "10048:6:9",
            "parameters": {
              "id": 1806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1805,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "10063:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "10055:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10055:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10054:13:9"
            },
            "returnParameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1817,
                  "src": "10091:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1807,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10091:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10090:6:9"
            },
            "scope": 1936,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1850,
            "nodeType": "FunctionDefinition",
            "src": "10613:531:9",
            "nodes": [],
            "body": {
              "id": 1849,
              "nodeType": "Block",
              "src": "10689:455:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1835,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 1831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1825,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "10706:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30783830616335386364",
                                "id": 1826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10721:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2158778573_by_1",
                                  "typeString": "int_const 2158778573"
                                },
                                "value": "0x80ac58cd"
                              },
                              "src": "10706:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "||",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 1830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1828,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "10776:11:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30783738306539643633",
                                "id": 1829,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10791:10:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2014223715_by_1",
                                  "typeString": "int_const 2014223715"
                                },
                                "value": "0x780e9d63"
                              },
                              "src": "10776:25:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "10706:95:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 1834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1832,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1820,
                              "src": "10856:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30783562356531333966",
                              "id": 1833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10871:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1532892063_by_1",
                                "typeString": "int_const 1532892063"
                              },
                              "value": "0x5b5e139f"
                            },
                            "src": "10856:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "10706:175:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1836,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1820,
                            "src": "10934:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783031666663396137",
                            "id": 1837,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10949:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33540519_by_1",
                              "typeString": "int_const 33540519"
                            },
                            "value": "0x01ffc9a7"
                          },
                          "src": "10934:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10706:253:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1840,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "11004:11:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783261353532303561",
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11019:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_710221914_by_1",
                            "typeString": "int_const 710221914"
                          },
                          "value": "0x2a55205a"
                        },
                        "src": "11004:25:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "10706:323:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 1846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1844,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1820,
                        "src": "11075:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783739363564623062",
                        "id": 1845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11090:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2036718347_by_1",
                          "typeString": "int_const 2036718347"
                        },
                        "value": "0x7965db0b"
                      },
                      "src": "11075:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10706:394:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1824,
                  "id": 1848,
                  "nodeType": "Return",
                  "src": "10699:401:9"
                }
              ]
            },
            "documentation": {
              "id": 1818,
              "nodeType": "StructuredDocumentation",
              "src": "10357:251:9",
              "text": " @dev See {IERC165-supportsInterface}.\n `supportsInterface()` was first implemented by all contracts and later\n all implementations removed, hardcoding\n interface IDs in order to save some gas and simplify the code."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "10622:17:9",
            "parameters": {
              "id": 1821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1820,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "10647:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "10640:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1819,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "10640:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10639:20:9"
            },
            "returnParameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1823,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1850,
                  "src": "10683:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1822,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10683:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10682:6:9"
            },
            "scope": 1936,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1925,
            "nodeType": "FunctionDefinition",
            "src": "11629:1749:9",
            "nodes": [],
            "body": {
              "id": 1924,
              "nodeType": "Block",
              "src": "11680:1698:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1857,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11698:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11702:6:9",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11698:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1859,
                          "name": "_FACTORY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1451,
                          "src": "11712:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11698:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11690:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11690:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "11690:31:9"
                },
                {
                  "assignments": [
                    1864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1864,
                      "mutability": "mutable",
                      "name": "deployer",
                      "nameLocation": "11740:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1924,
                      "src": "11732:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1863,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11732:7:9",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1865,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11732:16:9"
                },
                {
                  "expression": {
                    "id": 1881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 1866,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1182,
                          "src": "11759:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 1867,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1184,
                          "src": "11765:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        {
                          "id": 1868,
                          "name": "deployer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1864,
                          "src": "11773:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1869,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11758:24:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_address_$",
                        "typeString": "tuple(string storage ref,string storage ref,address)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1872,
                          "name": "_data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1853,
                          "src": "11796:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 1874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11804:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1873,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "11804:6:9",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 1876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11812:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                "typeString": "type(string storage pointer)"
                              },
                              "typeName": {
                                "id": 1875,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "11812:6:9",
                                "typeDescriptions": {}
                              }
                            },
                            {
                              "id": 1878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11820:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1877,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11820:7:9",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 1879,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "11803:25:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$",
                            "typeString": "tuple(type(string storage pointer),type(string storage pointer),type(address))"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          },
                          {
                            "typeIdentifier": "t_tuple$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_address_$_$",
                            "typeString": "tuple(type(string storage pointer),type(string storage pointer),type(address))"
                          }
                        ],
                        "expression": {
                          "id": 1870,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "11785:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 1871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "11789:6:9",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "11785:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11785:44:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_payable_$",
                        "typeString": "tuple(string memory,string memory,address payable)"
                      }
                    },
                    "src": "11758:71:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1882,
                  "nodeType": "ExpressionStatement",
                  "src": "11758:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1884,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "11851:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1885,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "11871:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1883,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "11840:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11840:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1887,
                  "nodeType": "ExpressionStatement",
                  "src": "11840:40:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1889,
                        "name": "CURATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "11901:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1890,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "11915:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1888,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "11890:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11890:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1892,
                  "nodeType": "ExpressionStatement",
                  "src": "11890:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1894,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "11945:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1895,
                        "name": "deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1864,
                        "src": "11958:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1893,
                      "name": "_grantRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 228,
                      "src": "11934:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11934:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "11934:33:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1899,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1445,
                        "src": "11991:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 1900,
                        "name": "CURATOR_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1448,
                        "src": "12004:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1898,
                      "name": "_setRoleAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "11977:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32,bytes32)"
                      }
                    },
                    "id": 1901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11977:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1902,
                  "nodeType": "ExpressionStatement",
                  "src": "11977:40:9"
                },
                {
                  "documentation": " @dev The EIP712Domain fields should be the order as above, skipping\n any absent fields.\n      Protocol designers only need to include the fields that make\n sense for their signing domain. Unused\n fields are left out of the struct type.\n @param name the user readable name of signing domain, i.e. the name\n of the DApp or the protocol.\n @param chainId the EIP-1155 chain id. The user-agent should refuse\n signing if it does not match the currently\n active chain.\n @param verifyingContract the address of the contract that will verify\n the signature. The user-agent may do\n contract specific phishing prevention.\n      verifyingContract is the only variable parameter in the\n DOMAIN_SEPARATOR in order to avoid signature\n replay across different contracts\n      therefore the DOMAIN_SEPARATOR MUST be calculated inside of the\n `initialize` function rather than the\n constructor.",
                  "expression": {
                    "id": 1922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1903,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2685,
                      "src": "13120:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1907,
                              "name": "DOMAIN_TYPEHASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2687,
                              "src": "13190:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 1911,
                                      "name": "name",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1182,
                                      "src": "13239:4:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "id": 1910,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13233:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 1909,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13233:5:9",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 1912,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13233:11:9",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                ],
                                "id": 1908,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "13223:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 1913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13223:22:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1914,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13271:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13277:7:9",
                              "memberName": "chainid",
                              "nodeType": "MemberAccess",
                              "src": "13271:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1918,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "13321:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ERC721Sovereign_$1936",
                                    "typeString": "contract ERC721Sovereign"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ERC721Sovereign_$1936",
                                    "typeString": "contract ERC721Sovereign"
                                  }
                                ],
                                "id": 1917,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13313:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1916,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13313:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13313:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1905,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "13162:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1906,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "13166:6:9",
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "13162:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13162:199:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1904,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "13139:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 1921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13139:232:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "13120:251:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1923,
                  "nodeType": "ExpressionStatement",
                  "src": "13120:251:9"
                }
              ]
            },
            "documentation": {
              "id": 1851,
              "nodeType": "StructuredDocumentation",
              "src": "11352:272:9",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE` and `MINTER_ROLE` to the account that\n deploys the contract.\n      `MINTER_ROLE` is needed in case the deployer may want to use or\n allow other accounts to mint on their\n self-sovereign collection"
            },
            "functionSelector": "439fab91",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "11638:10:9",
            "parameters": {
              "id": 1854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1853,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "11664:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1925,
                  "src": "11649:20:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1852,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11649:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11648:22:9"
            },
            "returnParameters": {
              "id": 1855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11680:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1935,
            "nodeType": "FunctionDefinition",
            "src": "13384:66:9",
            "nodes": [],
            "body": {
              "id": 1934,
              "nodeType": "Block",
              "src": "13414:36:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1930,
                      "name": "_FACTORY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "13424:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1931,
                      "name": "factory_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1927,
                      "src": "13435:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13424:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1933,
                  "nodeType": "ExpressionStatement",
                  "src": "13424:19:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1928,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1927,
                  "mutability": "mutable",
                  "name": "factory_",
                  "nameLocation": "13404:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1935,
                  "src": "13396:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13396:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13395:18:9"
            },
            "returnParameters": {
              "id": 1929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13414:0:9"
            },
            "scope": 1936,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1421,
              "name": "AccessControl",
              "nameLocations": [
                "1574:13:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 260,
              "src": "1574:13:9"
            },
            "id": 1422,
            "nodeType": "InheritanceSpecifier",
            "src": "1574:13:9"
          },
          {
            "baseName": {
              "id": 1423,
              "name": "ERC712",
              "nameLocations": [
                "1593:6:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2926,
              "src": "1593:6:9"
            },
            "id": 1424,
            "nodeType": "InheritanceSpecifier",
            "src": "1593:6:9"
          },
          {
            "baseName": {
              "id": 1425,
              "name": "ERC721Burnable",
              "nameLocations": [
                "1605:14:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1116,
              "src": "1605:14:9"
            },
            "id": 1426,
            "nodeType": "InheritanceSpecifier",
            "src": "1605:14:9"
          },
          {
            "baseName": {
              "id": 1427,
              "name": "ERC721Royalties",
              "nameLocations": [
                "1625:15:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1409,
              "src": "1625:15:9"
            },
            "id": 1428,
            "nodeType": "InheritanceSpecifier",
            "src": "1625:15:9"
          },
          {
            "baseName": {
              "id": 1429,
              "name": "ERC721Metadata_URI",
              "nameLocations": [
                "1646:18:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1319,
              "src": "1646:18:9"
            },
            "id": 1430,
            "nodeType": "InheritanceSpecifier",
            "src": "1646:18:9"
          },
          {
            "baseName": {
              "id": 1431,
              "name": "ERC721Enumerable",
              "nameLocations": [
                "1670:16:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1170,
              "src": "1670:16:9"
            },
            "id": 1432,
            "nodeType": "InheritanceSpecifier",
            "src": "1670:16:9"
          }
        ],
        "canonicalName": "ERC721Sovereign",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1420,
          "nodeType": "StructuredDocumentation",
          "src": "1084:456:9",
          "text": " @title ERC721Sovereign                                     *\n                                                           *\n @notice Self-sovereign ERC-721 minter preset               *\n                                                           *\n @dev {ERC721} token                                       *\n                                                           *\n @custom:security-contact tech@ninfa.io                    *"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1936,
          1170,
          1319,
          1409,
          1116,
          1072,
          2647,
          2926,
          260
        ],
        "name": "ERC721Sovereign",
        "nameLocation": "1551:15:9",
        "scope": 1937,
        "usedErrors": [],
        "usedEvents": [
          11,
          20,
          29,
          554,
          563,
          572,
          2702
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 9
}