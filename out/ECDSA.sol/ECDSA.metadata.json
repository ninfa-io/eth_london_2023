{
  "compiler": {
    "version": "0.8.22+commit.4fc1097e"
  },
  "language": "Solidity",
  "output": {
    "abi": [],
    "devdoc": {
      "details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/utils/cryptography/ECDSA.sol": "ECDSA"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "details": {
        "constantOptimizer": true,
        "cse": true,
        "deduplicate": true,
        "inliner": true,
        "jumpdestRemover": true,
        "orderLiterals": true,
        "peephole": true,
        "simpleCounterForLoopUncheckedIncrement": true,
        "yul": true,
        "yulDetails": {
          "optimizerSteps": "dhfoDgvulfnTUtnIf:fDnTOcmu",
          "stackAllocation": true
        }
      },
      "runs": 4194304
    },
    "remappings": [
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
      ":prb-test/=lib/prb-test/src/",
      ":solmate/=lib/solmate/src/",
      ":src/=contracts/",
      ":test/=test/"
    ],
    "viaIR": true
  },
  "sources": {
    "contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0xb739e54bef5daa5d5be886a0533002bd2d1ea1ac32cfc6f0c94d015a4448d48f",
      "license": "MIT",
      "urls": [
        "bzz-raw://ccad4fcf7316d54f137ccc229915c4d7c2dc0f98c7c3f5465cb69d033a44c56b",
        "dweb:/ipfs/QmSnUcKVJ2FXXGHSoN8QGdokHMkSzyCxhg5sxxHEK5etHt"
      ]
    }
  },
  "version": 1
}