{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":4194304},\"remappings\":[\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":prb-test/=lib/prb-test/src/\",\":solmate/=lib/solmate/src/\",\":src/=contracts/\",\":test/=test/\"],\"viaIR\":true},\"sources\":{\"test/interfaces/IERC165.sol\":{\"keccak256\":\"0x24ea350ff0c875d3f6686038b099d6995eca1b4bce16a27104c8bb3f0bc09a10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b6e83fd5b3ed635e22efb32f1187ab78eba204d90a035edb83863d7ec365024\",\"dweb:/ipfs/QmSxEwuDXyHWivXL48dpLDCuxKro8HrAxXSfnv2pvfH8h1\"]},\"test/interfaces/IERC721.sol\":{\"keccak256\":\"0x48c473e0d478fcabb87b573a98cc110c104af78ac23d9c95588c69b66a0972c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ea4455945b0ae33417a35ad6a3b800b305304fa0f451c529255701b1caff6b8\",\"dweb:/ipfs/Qmb1yxDouFGGgnYVcodPSp8GcY31UiWLWZzXpgqWHskgm6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.22+commit.4fc1097e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the number of tokens in ``owner``'s account."
          },
          "getApproved(uint256)": {
            "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "isApprovedForAll(address,address)": {
            "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
          },
          "ownerOf(uint256)": {
            "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "ds-test/=lib/solmate/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "prb-test/=lib/prb-test/src/",
        "solmate/=lib/solmate/src/",
        "src/=contracts/",
        "test/=test/"
      ],
      "optimizer": {
        "runs": 4194304,
        "details": {
          "peephole": true,
          "inliner": true,
          "jumpdestRemover": true,
          "orderLiterals": true,
          "deduplicate": true,
          "cse": true,
          "constantOptimizer": true,
          "yul": true,
          "yulDetails": {
            "stackAllocation": true,
            "optimizerSteps": "dhfoDgvulfnTUtnIf:fDnTOcmu"
          }
        }
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "test/interfaces/IERC721.sol": "IERC721"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "test/interfaces/IERC165.sol": {
        "keccak256": "0x24ea350ff0c875d3f6686038b099d6995eca1b4bce16a27104c8bb3f0bc09a10",
        "urls": [
          "bzz-raw://5b6e83fd5b3ed635e22efb32f1187ab78eba204d90a035edb83863d7ec365024",
          "dweb:/ipfs/QmSxEwuDXyHWivXL48dpLDCuxKro8HrAxXSfnv2pvfH8h1"
        ],
        "license": "MIT"
      },
      "test/interfaces/IERC721.sol": {
        "keccak256": "0x48c473e0d478fcabb87b573a98cc110c104af78ac23d9c95588c69b66a0972c3",
        "urls": [
          "bzz-raw://3ea4455945b0ae33417a35ad6a3b800b305304fa0f451c529255701b1caff6b8",
          "dweb:/ipfs/Qmb1yxDouFGGgnYVcodPSp8GcY31UiWLWZzXpgqWHskgm6"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/interfaces/IERC721.sol",
    "id": 51001,
    "exportedSymbols": {
      "IERC165": [
        50884
      ],
      "IERC721": [
        51000
      ]
    },
    "nodeType": "SourceUnit",
    "src": "108:4858:43",
    "nodes": [
      {
        "id": 50886,
        "nodeType": "PragmaDirective",
        "src": "108:23:43",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".22"
        ]
      },
      {
        "id": 50887,
        "nodeType": "ImportDirective",
        "src": "133:23:43",
        "nodes": [],
        "absolutePath": "test/interfaces/IERC165.sol",
        "file": "./IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51001,
        "sourceUnit": 50885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51000,
        "nodeType": "ContractDefinition",
        "src": "226:4739:43",
        "nodes": [
          {
            "id": 50899,
            "nodeType": "EventDefinition",
            "src": "354:82:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50891,
              "nodeType": "StructuredDocumentation",
              "src": "261:88:43",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
            "name": "Transfer",
            "nameLocation": "360:8:43",
            "parameters": {
              "id": 50898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50893,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "385:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50899,
                  "src": "369:20:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50895,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "407:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50899,
                  "src": "391:18:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "391:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50897,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "427:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50899,
                  "src": "411:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "411:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:67:43"
            }
          },
          {
            "id": 50908,
            "nodeType": "EventDefinition",
            "src": "548:89:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50900,
              "nodeType": "StructuredDocumentation",
              "src": "442:101:43",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId`\n token."
            },
            "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
            "name": "Approval",
            "nameLocation": "554:8:43",
            "parameters": {
              "id": 50907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50902,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "579:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50908,
                  "src": "563:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50901,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "563:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50904,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "602:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50908,
                  "src": "586:24:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50906,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "628:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50908,
                  "src": "612:23:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "562:74:43"
            }
          },
          {
            "id": 50917,
            "nodeType": "EventDefinition",
            "src": "772:85:43",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50909,
              "nodeType": "StructuredDocumentation",
              "src": "643:124:43",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to\n manage all of its assets."
            },
            "eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
            "name": "ApprovalForAll",
            "nameLocation": "778:14:43",
            "parameters": {
              "id": 50916,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50911,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "809:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50917,
                  "src": "793:21:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "793:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50913,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "832:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50917,
                  "src": "816:24:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50915,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "847:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50917,
                  "src": "842:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50914,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "792:64:43"
            }
          },
          {
            "id": 50925,
            "nodeType": "FunctionDefinition",
            "src": "944:74:43",
            "nodes": [],
            "documentation": {
              "id": 50918,
              "nodeType": "StructuredDocumentation",
              "src": "863:76:43",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "953:9:43",
            "parameters": {
              "id": 50921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50920,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "971:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50925,
                  "src": "963:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "962:15:43"
            },
            "returnParameters": {
              "id": 50924,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50923,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1009:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50925,
                  "src": "1001:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50922,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:17:43"
            },
            "scope": 51000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50933,
            "nodeType": "FunctionDefinition",
            "src": "1160:72:43",
            "nodes": [],
            "documentation": {
              "id": 50926,
              "nodeType": "StructuredDocumentation",
              "src": "1024:131:43",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1169:7:43",
            "parameters": {
              "id": 50929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50928,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1185:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50933,
                  "src": "1177:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:17:43"
            },
            "returnParameters": {
              "id": 50932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50931,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1225:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50933,
                  "src": "1217:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1216:15:43"
            },
            "scope": 51000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50945,
            "nodeType": "FunctionDefinition",
            "src": "1813:99:43",
            "nodes": [],
            "documentation": {
              "id": 50934,
              "nodeType": "StructuredDocumentation",
              "src": "1238:570:43",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by\n either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1822:16:43",
            "parameters": {
              "id": 50943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50936,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1847:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50945,
                  "src": "1839:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50935,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1839:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50938,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1861:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50945,
                  "src": "1853:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1853:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50940,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1873:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50945,
                  "src": "1865:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50939,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1865:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50942,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1897:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50945,
                  "src": "1882:19:43",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50941,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:5:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1838:64:43"
            },
            "returnParameters": {
              "id": 50944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1911:0:43"
            },
            "scope": 51000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50955,
            "nodeType": "FunctionDefinition",
            "src": "2638:78:43",
            "nodes": [],
            "documentation": {
              "id": 50946,
              "nodeType": "StructuredDocumentation",
              "src": "1918:715:43",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first\n that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever\n locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this\n token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "2647:16:43",
            "parameters": {
              "id": 50953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50948,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2672:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50955,
                  "src": "2664:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50950,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2686:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50955,
                  "src": "2678:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50952,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2698:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50955,
                  "src": "2690:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2690:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2663:43:43"
            },
            "returnParameters": {
              "id": 50954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2715:0:43"
            },
            "scope": 51000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50965,
            "nodeType": "FunctionDefinition",
            "src": "3487:74:43",
            "nodes": [],
            "documentation": {
              "id": 50956,
              "nodeType": "StructuredDocumentation",
              "src": "2722:760:43",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the\n recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom}\n prevents loss, though the caller must\n understand this adds an external call which potentially creates a\n reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by\n either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "3496:12:43",
            "parameters": {
              "id": 50963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50958,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3517:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50965,
                  "src": "3509:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3509:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50960,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3531:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50965,
                  "src": "3523:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50962,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3543:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50965,
                  "src": "3535:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3535:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3508:43:43"
            },
            "returnParameters": {
              "id": 50964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3560:0:43"
            },
            "scope": 51000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50973,
            "nodeType": "FunctionDefinition",
            "src": "4038:55:43",
            "nodes": [],
            "documentation": {
              "id": 50966,
              "nodeType": "StructuredDocumentation",
              "src": "3567:466:43",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another\n account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero\n address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4047:7:43",
            "parameters": {
              "id": 50971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50968,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4063:2:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50973,
                  "src": "4055:10:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4055:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50970,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4075:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50973,
                  "src": "4067:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50969,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4067:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4054:29:43"
            },
            "returnParameters": {
              "id": 50972,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4092:0:43"
            },
            "scope": 51000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50981,
            "nodeType": "FunctionDefinition",
            "src": "4420:70:43",
            "nodes": [],
            "documentation": {
              "id": 50974,
              "nodeType": "StructuredDocumentation",
              "src": "4099:316:43",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token\n owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4429:17:43",
            "parameters": {
              "id": 50979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50976,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4455:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50981,
                  "src": "4447:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4447:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50978,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "4470:9:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50981,
                  "src": "4465:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50977,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4446:34:43"
            },
            "returnParameters": {
              "id": 50980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4489:0:43"
            },
            "scope": 51000,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50989,
            "nodeType": "FunctionDefinition",
            "src": "4640:79:43",
            "nodes": [],
            "documentation": {
              "id": 50982,
              "nodeType": "StructuredDocumentation",
              "src": "4496:139:43",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4649:11:43",
            "parameters": {
              "id": 50985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50984,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4669:7:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50989,
                  "src": "4661:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50983,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4661:7:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4660:17:43"
            },
            "returnParameters": {
              "id": 50988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50987,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4709:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50989,
                  "src": "4701:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4701:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4700:18:43"
            },
            "scope": 51000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50999,
            "nodeType": "FunctionDefinition",
            "src": "4875:88:43",
            "nodes": [],
            "documentation": {
              "id": 50990,
              "nodeType": "StructuredDocumentation",
              "src": "4725:145:43",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of\n `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4884:16:43",
            "parameters": {
              "id": 50995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50992,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4909:5:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50999,
                  "src": "4901:13:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50991,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4901:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50994,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4924:8:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 50999,
                  "src": "4916:16:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50993,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4916:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4900:33:43"
            },
            "returnParameters": {
              "id": 50998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50999,
                  "src": "4957:4:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50996,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4957:4:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4956:6:43"
            },
            "scope": 51000,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50889,
              "name": "IERC165",
              "nameLocations": [
                "247:7:43"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 50884,
              "src": "247:7:43"
            },
            "id": 50890,
            "nodeType": "InheritanceSpecifier",
            "src": "247:7:43"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 50888,
          "nodeType": "StructuredDocumentation",
          "src": "158:67:43",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          51000,
          50884
        ],
        "name": "IERC721",
        "nameLocation": "236:7:43",
        "scope": 51001,
        "usedErrors": [],
        "usedEvents": [
          50899,
          50908,
          50917
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 43
}